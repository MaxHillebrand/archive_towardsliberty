{"remainingRequest":"/home/user/WasabiDoc/node_modules/vue-loader/lib/index.js??ref--1-1!/home/user/WasabiDoc/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/home/user/WasabiDoc/docs/.vuepress/variables.js!/home/user/WasabiDoc/docs/FAQ/FAQ-UseWasabi.md?vue&type=template&id=1b69f2ed&","dependencies":[{"path":"/home/user/WasabiDoc/docs/FAQ/FAQ-UseWasabi.md","mtime":1579971419601},{"path":"/home/user/WasabiDoc/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/user/WasabiDoc/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/user/WasabiDoc/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/user/WasabiDoc/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/user/WasabiDoc/node_modules/@vuepress/markdown-loader/index.js","mtime":499162500000},{"path":"/home/user/WasabiDoc/docs/.vuepress/variables.js","mtime":1579281550529}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:
<ContentSlotsDistributor :slot-key="$parent.slotKey"><h1 id="use-of-wasabi"><a class="header-anchor" href="#use-of-wasabi">#</a> Use of Wasabi</h1>
<h2 id="wallet-manager"><a class="header-anchor" href="#wallet-manager">#</a> Wallet Manager</h2>

  <div class="ytEmbed" data-id="XykixYdbFpA" style="background-image:url(https://img.youtube.com/vi/XykixYdbFpA/hqdefault.jpg);">
    <iframe
      title="YouTube XykixYdbFpA"
      data-src="https://www.youtube-nocookie.com/embed/XykixYdbFpA?&autoplay=1&autohide=1&modestbranding=1&color=white&rel=0"
      frameborder="0"
      allow="autoplay;encrypted-media;picture-in-picture"
      allowfullscreen
    ></iframe>
  </div>
<details id="how-do-i-generate-a-new-wallet"><summary><a href="#how-do-i-generate-a-new-wallet" aria-hidden="true" class="header-anchor">#</a> <h4>How do I generate a new wallet?</h4></summary>
<p>You can generate as many new wallets as you'd like, for no extra cost and without asking for permission.
Go to the <code>Wallet Manager</code> tab and the <code>Generate Wallet</code> menu.
As with everything in Wasabi, you are required to label this new wallet.
Make sure that you are precise so that you know what this is for later.
The password is used to encrypt the private key (extracted from the extended private key) on the computer.
<strong>Careful!!</strong>
<strong>Without knowledge of the password, you CANNOT spend your bitcoin!!</strong>
Make sure that you properly back up and write down this password.
Please also read and agree to the terms and conditions, the privacy policy and the legal issues.
Now you can continue with clicking <code>Generate</code>.</p>
<p><img src="/WalletManagerGenerateWallet.png" alt=""></p>
<p>Now you will see the 12 recovery words, this is the mnemonic seed that you can use to backup and recover your wallet.
Make sure, and triple check, that you have done a proper backup of BOTH the password AND the mnemonic.
When you only have the recovery words, but not the password, then you will NOT be able to recover your wallet.
In order to protect your paper backup, consider storing the password and recovery words in two different locations.
You have successfully setup your wallet when you click <code>I wrote down my Recovery Words!</code></p>
<p><img src="/WalletManagerRecoveryWords.png" alt=""></p>
</details><details id="can-i-rename-my-wallet"><summary><a href="#can-i-rename-my-wallet" aria-hidden="true" class="header-anchor">#</a> <h4>Can I rename my Wallet?</h4></summary>
<p>Yes you can.
Go to <code>Wallets</code> folder (inside the <router-link to="/using-wasabi/WasabiSetupTails.html#wasabi-data-folder">Wasabi data folder</router-link>) and rename the .json Wallet file.
Then go to <code>WalletBackups</code> folder (inside <router-link to="/using-wasabi/WasabiSetupTails.html#wasabi-data-folder">Wasabi data folder</router-link>) and rename the .json Wallet file.</p>
<div class="custom-block tip"><p class="custom-block-title">TIP</p>
<p>You need to mark the “show hidden files” setting to see the Wasabi data folder.</p>
</div>
<div class="custom-block danger"><p class="custom-block-title">WARNING</p>
<p>To avoid problems, make sure you close Wasabi Wallet before proceeding to rename any of your wallets.</p>
</div>
</details><details id="what-password-should-i-use"><summary><a href="#what-password-should-i-use" aria-hidden="true" class="header-anchor">#</a> <h4>What password should I use?</h4></summary>
<p>The password you set is used as a 13th word (passphrase) as described in <router-link to="/using-wasabi/BIPs.html#bip-39-mnemonic-code-for-generating-deterministic-keys">BIP 39</router-link>, and is used to encrypt the private key of the extended private key as described in <router-link to="/using-wasabi/BIPs.html#bip-38-password-protected-private-key">BIP 38</router-link> to get an encrypted private key which is stored on the computer.
This is the password that will unlock your bitcoin to anyone who has access to the backup or computer.
You will need to type in the password before you can spend from a Wasabi wallet.
So if your backup gets compromised, this password is the only thing protecting your precious sats.</p>
<div class="custom-block danger"><p class="custom-block-title">WARNING</p>
<p>It is <strong>VERY</strong> important to use a random and long password.</p>
</div>
<p>Since it is very difficult for humans to generate true randomness, it is good to use a tool to help find a strong password.
This can be the <a href="https://www.eff.org/deeplinks/2016/07/new-wordlists-random-passphrases" target="_blank" rel="noopener noreferrer">Diceware english wordlist<OutboundLink/></a>, for true off-line password.
For Diceware in other languages follow <a href="http://world.std.com/~reinhold/diceware.html#Diceware%20in%20Other%20Languages%7Coutline" target="_blank" rel="noopener noreferrer">this link<OutboundLink/></a>.
A secure password manager software might also be used, but be careful here.</p>
</details><details id="how-do-i-back-up-my-mnemonic-words"><summary><a href="#how-do-i-back-up-my-mnemonic-words" aria-hidden="true" class="header-anchor">#</a> <h4>How do I back up my mnemonic words?</h4></summary><div class="custom-block tip"><p class="custom-block-title">TIP</p>
<p>Write down your recovery words!</p>
</div>
<p>Wasabi uses <router-link to="/using-wasabi/BIPs.html#bip-39-mnemonic-code-for-generating-deterministic-keys">BIP 39: mnemonic code for generating deterministic keys</router-link> to enable easy backups of all private keys in the wallet.
The mnemonic is displayed as 12 recovery words that are only shown once during the wallet generation.</p>
<p><img src="/WalletManagerRecoveryWords.png" alt=""></p>
<div class="custom-block danger"><p class="custom-block-title">WARNING</p>
<p>In order to restore a wallet, you need BOTH the mnemonic words AND the password!</p>
</div>
<p>It is a good idea to keep the two in separate analog backups, such as a laminated paper written with pencil.
In order to defend against nature destroying fragile paper, you can consider stamping the words into metal.
Use two different backups and locations for the mnemonic and password, because whoever has both [including a physical attacker] has full access to your sats.
Find a secure physical location to store the backups, maybe a home safe, or an expert security deposit box.</p>
<p>Please see <a href="https://github.com/6102bitcoin/FAQ/blob/master/seed.md#3-Storing-your-Seed" target="_blank" rel="noopener noreferrer">this great guide<OutboundLink/></a> on how to properly store your seed.</p>
</details><details id="where-can-i-find-the-wasabi-data-folder"><summary><a href="#where-can-i-find-the-wasabi-data-folder" aria-hidden="true" class="header-anchor">#</a> <h4>Where can I find the Wasabi data folder?</h4></summary>
<ul>
<li>Windows: <code>/Users/{your username}/AppData/Roaming/WalletWasabi/Client</code></li>
<li>Linux: <code>/Home/.walletwasabi/client</code></li>
<li>MacOS: <code>/Users/{your username}/.walletwasabi/client</code></li>
</ul>
<div class="custom-block tip"><p class="custom-block-title">TIP</p>
<p>You need to mark the “show hidden files” setting to see it.</p>
</div>
<p>You can also easily reach it from inside Wasabi: <code>File &gt; Open &gt; Data Folder</code>.</p>
</details><details id="how-do-i-backup-my-wallet-file"><summary><a href="#how-do-i-backup-my-wallet-file" aria-hidden="true" class="header-anchor">#</a> <h4>How do I backup my wallet file?</h4></summary>
<p>Although you can backup your private keys with the mnemonic words and password, this is only a last resort recovery.
If you want to also secure your address labels, the anonset and additional metadata, then you can do a digital backup.
Simply copy the <code>WalletBackups</code> folder with the <code>wallet.json</code> files from your <router-link to="/FAQ/FAQ-UseWasabi.html#where-can-i-find-the-wasabi-data-folder">Wasabi data folder</router-link> onto suitable hardware, for example an encrypted USB stick.
Note that this file has the encrypted private key (extracted from the extended private key), meaning that you only need the password to spend the bitcoin.
This also contains the extended public key, the public keys, and the address labels, meaning that it completely links all the coins, both pre and post mix, with clear proof.</p>
<div class="custom-block warning"><p class="custom-block-title">WARNING</p>
<p>Make sure to back up your password separately because it is necessary to spend your bitcoin.</p>
</div>
<div class="custom-block tip"><p class="custom-block-title">TIP</p>
<p>The wallet file backup is sensitive, in terms of privacy, but not critical in terms of loss of funds (if a password was used when generating the wallet).
So it is good advice to encrypt this wallet file.</p>
</div>
</details><details id="can-i-spend-my-bitcoin-without-the-password"><summary><a href="#can-i-spend-my-bitcoin-without-the-password" aria-hidden="true" class="header-anchor">#</a> <h4>Can I spend my bitcoin without the password?</h4></summary><div class="custom-block danger"><p class="custom-block-title">WARNING</p>
<p>NO!!! Without knowledge of your password, even when you have the wallet file and recovery words, you can NOT spend your bitcoin!</p>
</div>
<p>When creating a new wallet, after labeling it properly, the next step is to select a long and random password.
This is used to encrypt the private key (extracted from the extended private key) on your computer, which has an insecure operating system and is connected to the Internet.
Every time you want to spend your coins from Wasabi, you MUST provide this password.
So even if you have these words securely engraved in metal, without the password, you cannot restore the backup of your wallet.</p>
<div class="custom-block tip"><p class="custom-block-title">TIP</p>
<p>Always backup your mnemonic recovery words, and your password in two separate secure locations.</p>
</div>
</details><details id="why-bip-38"><summary><a href="#why-bip-38" aria-hidden="true" class="header-anchor">#</a> <h4>Why BIP 38?</h4></summary>
<p><router-link to="/using-wasabi/BIPs.html#bip-38-password-protected-private-key">BIP 38</router-link> is a good standard, a well-tested and very secure way to encrypt a private key.
It is also implemented in the <a href="https://github.com/MetacoSA/NBitcoin" target="_blank" rel="noopener noreferrer">NBitcoin library<OutboundLink/></a> so, it's easy to use.
Additionally, there is no standard way (bip) to encrypt HD wallets.
Take into account that it is not only encryption what <router-link to="/using-wasabi/BIPs.html#bip-38-password-protected-private-key">BIP 38</router-link> provides but also a brute-force protection.</p>
</details><details id="does-wasabi-support-the-hidden-wallets-of-hardware-wallets"><summary><a href="#does-wasabi-support-the-hidden-wallets-of-hardware-wallets" aria-hidden="true" class="header-anchor">#</a> <h4>Does Wasabi support the hidden wallets of hardware wallets?</h4></summary>
<p>Partially.
Only device side passphrase is supported.
PC side passphrase is not.
This means the hidden wallet feature can be used with Trezor T, Ledger Nano S and ColdCard, but it cannot be used with Trezor One.
After the 12 or 24 words, enter the passphrase as the 13th or 25th word.
It’s part of <router-link to="/using-wasabi/BIPs.html#bip-39-mnemonic-code-for-generating-deterministic-keys">BIP 39</router-link>.</p>
</details><details id="i-forgot-my-lockscreen-pin-what-should-i-do"><summary><a href="#i-forgot-my-lockscreen-pin-what-should-i-do" aria-hidden="true" class="header-anchor">#</a> <h4>I forgot my lockscreen PIN, what should I do?</h4></summary>
<p>As described in the settings, you can just delete it.
Open the <code>UiConfig.json</code> file inside your <router-link to="/FAQ/FAQ-UseWasabi.html#where-can-i-find-the-wasabi-data-folder">Wasabi data folder</router-link> and set these entries as follows:</p>
<!--beforebegin--><div class="language- extra-class"><!--afterbegin--><pre v-pre class="language-text"><code>&quot;LockScreenActive&quot;: false,
&quot;LockScreenPinHash&quot;: &quot;&quot;
</code></pre>
<!--beforeend--></div><!--afterend--></details><h2 id="synchronization"><a class="header-anchor" href="#synchronization">#</a> Synchronization</h2>

  <div class="ytEmbed" data-id="qguwAvA5Fx4" style="background-image:url(https://img.youtube.com/vi/qguwAvA5Fx4/hqdefault.jpg);">
    <iframe
      title="YouTube qguwAvA5Fx4"
      data-src="https://www.youtube-nocookie.com/embed/qguwAvA5Fx4?&autoplay=1&autohide=1&modestbranding=1&color=white&rel=0"
      frameborder="0"
      allow="autoplay;encrypted-media;picture-in-picture"
      allowfullscreen
    ></iframe>
  </div>
<details id="what-are-bip-158-block-filters"><summary><a href="#what-are-bip-158-block-filters" aria-hidden="true" class="header-anchor">#</a> <h4>What are BIP-158 block filters?</h4></summary>
<p>When you do not run a full node, you need to communicate with some third party node to find out how much money you have.
There are very bad wallets that simply send the extended public key, and thus all your addresses and your entire transaction history, to a selected, or random server.
This means that this trusted third party has full knowledge of a lot of your sensitive financial data.</p>
<div class="custom-block danger"><p class="custom-block-title">This is not acceptable</p>
<p>Do not send your extended public key to a third party server!</p>
</div>
<div class="custom-block tip"><p class="custom-block-title">TIP</p>
<p>This is why Wasabi uses <router-link to="/using-wasabi/BIPs.html#bip-158-compact-block-filters-for-light-clients">BIP-158 block filters</router-link> to ensure <router-link to="/using-wasabi/NetworkLevelPrivacy.html">network level privacy</router-link>.
It's as good as running a full node.</p>
</div>
<p>The Wasabi coordinator will send your wallet comparatively small block filters, and you check locally if the block contains a transaction with your coins.
If not, then the filter is stored for later reference and for syncing new wallets.
If yes, then the wallet connects to a random Bitcoin peer-to-peer full node to request this entire block.
Your wallet does not communicate with the Wasabi server to download the block, because there's no need to trust it.
For every block download, Wasabi establishes a new and unique tor identity, meaning that it is not easy to link that it is the same entity downloading all these blocks.
The P2P node that serves you the block does not know if you are a regular Bitcoin full node, or a Wasabi light client node.
You are yet another peer in the network.</p>
<p>It is important to note that although the privacy is as good as with a full node, you do not verify that the coins are actually valid.
In order to do this, you must run a full node and verify the entire timechain.
With the block filters, you trust that the Wasabi server gives you the correct filters, and does not withhold any of them.
You also do not have proof that the block you download from a P2P node is actually in the valid chain, but you can verify the proof of work in the block header.</p>
</details><details id="how-does-wasabi-download-a-relevant-block"><summary><a href="#how-does-wasabi-download-a-relevant-block" aria-hidden="true" class="header-anchor">#</a> <h4>How does Wasabi download a relevant block?</h4></summary>
<p>Wasabi uses <router-link to="/using-wasabi/BIPs.html#bip-158-compact-block-filters-for-light-clients">BIP 158</router-link> block filter to find out if a specific block contains a transaction of a specific wallet.
If so, then by default Wasabi connects to a random Bitcoin peer to peer full node over tor, and requests only to download this block.
For each block, it generates a new and separate tor identity.</p>
<p>If you are running your own node, then you can pull this block directly from the timechain that you have fully verified your self.
If the node is on the same computer, then it is connected automatically by default.
You can also specify the local IP or tor hidden service of your remote full node.</p>
</details><details id="how-do-i-know-if-the-synchronization-is-finished"><summary><a href="#how-do-i-know-if-the-synchronization-is-finished" aria-hidden="true" class="header-anchor">#</a> <h4>How do I know if the synchronization is finished?</h4></summary>
<p>You know that tor is properly connected, that all the block filters and all the relevant blocks are downloaded when you see that the status bar is <code>Ready</code>.</p>
<p><img src="/StatusBar.png" alt=""></p>
</details><details id="what-does-it-mean-missing-filters"><summary><a href="#what-does-it-mean-missing-filters" aria-hidden="true" class="header-anchor">#</a> <h4>What does it mean "Missing Filters"?</h4></summary>
<p>The <code>Missing Filters</code> label indicates that Wasabi is still downloading the <router-link to="/using-wasabi/BIPs.html#bip-158-compact-block-filters-for-light-clients">BIP 158 block filters</router-link> and it's synchronizing your wallet.
You have just to wait until the status bar is <code>Ready</code>.</p>
</details><details id="how-long-does-the-initial-and-a-subsequent-synchronization-take"><summary><a href="#how-long-does-the-initial-and-a-subsequent-synchronization-take" aria-hidden="true" class="header-anchor">#</a> <h4>How long does the initial, and a subsequent synchronization take?</h4></summary>
<p>It usually only takes a couple seconds to scan the block filters, download and parse the blocks.
However, for large wallets with a many transactions, this synchronization can take up to several minutes.
We are constantly improving the speed and reliability of the loading process.
For especially old wallets, it might be worth considering to start a new wallet with a shorter transaction history.</p>
</details><details id="can-wasabi-work-with-a-pruned-bitcoin-node"><summary><a href="#can-wasabi-work-with-a-pruned-bitcoin-node" aria-hidden="true" class="header-anchor">#</a> <h4>Can Wasabi work with a pruned bitcoin node?</h4></summary>
<p>Yes.
Wasabi is a hybrid, if your node doesn't have a block, then it acquires it from someone else.</p>
</details><h2 id="receive"><a class="header-anchor" href="#receive">#</a> Receive</h2>

  <div class="ytEmbed" data-id="9i7CceIdFg4" style="background-image:url(https://img.youtube.com/vi/9i7CceIdFg4/hqdefault.jpg);">
    <iframe
      title="YouTube 9i7CceIdFg4"
      data-src="https://www.youtube-nocookie.com/embed/9i7CceIdFg4?&autoplay=1&autohide=1&modestbranding=1&color=white&rel=0"
      frameborder="0"
      allow="autoplay;encrypted-media;picture-in-picture"
      allowfullscreen
    ></iframe>
  </div>
<details id="why-is-it-bad-to-re-use-addresses"><summary><a href="#why-is-it-bad-to-re-use-addresses" aria-hidden="true" class="header-anchor">#</a> <h4>Why is it bad to re-use addresses?</h4></summary>
<p>Bitcoin is designed so that for every payment you can use a new address that is not tied to any of your previous addresses.
When you use a new address for every coin, then it becomes much much more difficult to find out that these coins are yours.
However, when you use the same address for every coin, then everyone knows that all coins can be spent by one individual who has the private key - you!
Thus, when someone finds out that you have that address, maybe you published it in your social media profile for donations, or you sent a coin to another peer who knows you, then he knows also how many bitcoin you have in that same address.
Take good care to whom you tell your addresses, and every time use a different address.</p>
<p>Because you have all the private keys, for all these addresses, you can produce a valid signature for any of them.
So you can prove that these are your bitcoin, without relying on reputation that you have any other coins.
You can easily generate and store billions of private keys and addresses in a convenient <router-link to="/using-wasabi/BIPs.html#bip-44-multi-account-hierarchy-for-deterministic-wallets">BIP 44 multi-account hierarchy for deterministic wallets</router-link> so that you can backup everything in your 12 word mnemonic phrase.</p>
<p>This is what is used in Wasabi.
You have a mnemonic backup, and an unlimited number of new addresses.
Every time a coin is received, the address is removed from the GUI so that you are not tempted to use it again.</p>
<div class="custom-block danger"><p class="custom-block-title">WARNING</p>
<p><strong>NEVER RE-USE ADDRESSES</strong></p>
</div>
</details><details id="how-do-i-generate-a-new-receiving-address"><summary><a href="#how-do-i-generate-a-new-receiving-address" aria-hidden="true" class="header-anchor">#</a> <h4>How do I generate a new receiving address?</h4></summary>
<p>You can generate a new bech32 address in the <code>Receive</code> tab of Wasabi Wallet.
First you must set a label for it, so that you later know who has sent you bitcoin to this address.
Be precise in the reason for the payment, labeling the observers is an important part of good <router-link to="/FAQ/FAQ-UseWasabi.html#why-is-coin-control-so-important">coin control</router-link> privacy best practices.
Then you can click on <code>Generate</code> which will now show you the address, and immediately copy it to the clipboard.
After a coin has been sent to this address, it is removed from the GUI, this is a good feature to help protect you against <router-link to="/FAQ/FAQ-UseWasabi.html#why-is-it-bad-to-re-use-addresses">address reuse</router-link>.</p>
<p><img src="/ReceiveLabelingRequired.png" alt=""></p>
<p>If you generate more than 21 unused addresses, a notification will appear saying <code>Warning! MinGapLimit increased from 21 to 22.</code> and so on.
The <code>MinGapLimit</code> is the maximum number of consecutive unused addresses in your sequence of addresses, Wasabi automatically increases this value if needed when you generate new receiving addresses.
When you import the wallet file into a new Wasabi client, then it will use this <code>MinGapLimit</code> to find all your coins in the wallet.</p>
</details><details id="why-do-i-have-to-label-my-address"><summary><a href="#why-do-i-have-to-label-my-address" aria-hidden="true" class="header-anchor">#</a> <h4>Why do I have to label my address?</h4></summary>
<p>Bitcoin addresses look like cyphertext, they are not easily remembered and it's not clear how they were used previously.
When you do not label all your addresses, there is no meta-data for you to understand the context of their coins.
Thus receiving addresses and sending transactions that generate a change coin should be carefully labeled with the observers who know about this.
This helps you know where your coins came from so that you can judge whether there are privacy concerns when sending a specific coin to a specific receiver.</p>
<p><img src="/ReceiveLabelingRequired.png" alt=""></p>
<p>When labeling a newly generated address or a sending transaction that generates a change coin you should ask yourself: &quot;Who knows this address is mine?&quot; or &quot;Who will I share this address with?&quot; or &quot;From whom I am receiving bitcoin?&quot; or &quot;To whom I am sending bitcoin?&quot;
Labels should contain the comma-separated names of people/entities that may be aware of the transaction and could follow its trail like:</p>
<p><code>Name of the sender or the receiver, name of the exchange, name of the payment processor</code></p>
<p>So, a good label could be:</p>
<p><code>Alice, Bitfinex, BTCPay Server</code></p>
<p>or:</p>
<p><code>Alice &amp; Bob</code> (This is one entity which is not the same as <code>Alice, Bob</code> as they are multiple entities and thus separated by a comma)</p>
</details><details id="how-can-i-change-the-label-of-my-receive-address"><summary><a href="#how-can-i-change-the-label-of-my-receive-address" aria-hidden="true" class="header-anchor">#</a> <h4>How can I change the label of my receive address?</h4></summary>
<p>You can change the label of your receive address in the right click menu by clicking <code>Change Label</code>, then type in the new label.
This is useful for when you have generated a receiving address with a specific label, but then the cause for receiving is no longer present.
Take care with whom you have shared this address, because if you send it to several people, they might all send many coins to the same address.
This is very bad for your privacy because of <router-link to="/using-wasabi/AddressReuse.html">address reuse</router-link>, and it confuses you with the labeling of each unique coin.</p>
<p><img src="/ReceiveAddressDropDownMenu.png" alt=""></p>
</details><details id="how-can-i-edit-the-label-of-my-address-after-a-transaction-has-gone-through"><summary><a href="#how-can-i-edit-the-label-of-my-address-after-a-transaction-has-gone-through" aria-hidden="true" class="header-anchor">#</a> <h4>How can I edit the label of my address after a transaction has gone through?</h4></summary>
<p>To date there is no possibility to change the label of an address after it has sent or received bitcoins.</p>
</details><details id="are-there-privacy-concerns-regarding-whom-i-send-my-address"><summary><a href="#are-there-privacy-concerns-regarding-whom-i-send-my-address" aria-hidden="true" class="header-anchor">#</a> <h4>Are there privacy concerns regarding whom I send my address?</h4></summary>
<p>Yes.
Whomever you send your address, he knows that this address, and any coin sent to it, belongs to you.
Thus it is important to have labeled receiving addresses, so that you know which address is known by whom.
It is important that you avoid sending the same address to several different individuals.
There is a risk that both of them send coins to this same destination, thus unnecessarily linking the payments.</p>
<div class="custom-block danger"><p class="custom-block-title">WARNING</p>
<p>It is especially important to <strong>NEVER</strong> send your extended public key to any third party server.
This is a complete de-anonymization of your entire wallet!!</p>
</div>
</details><details id="why-does-wasabi-only-use-segwit-bech32-addresses"><summary><a href="#why-does-wasabi-only-use-segwit-bech32-addresses" aria-hidden="true" class="header-anchor">#</a> <h4>Why does Wasabi only use SegWit bech32 addresses?</h4></summary>
<p>Wasabi generates Bech32 addresses only, also known as bc1 addresses or native SegWit addresses.
These addresses start with the characters <code>bc1...</code> Some wallets/exchanges do not yet support this type of address and may give an error message (e.g. &quot;unknown bitcoin address&quot;).
The solution is to manage your funds with a wallet which does support Bech32.
To check Bech32 adoption and exchange/wallet support you can follow <a href="https://en.bitcoin.it/wiki/Bech32_adoption" target="_blank" rel="noopener noreferrer">Bitcoin.it Wiki<OutboundLink/></a> and <a href="https://whensegwit.com/#who" target="_blank" rel="noopener noreferrer">When Segwit? website<OutboundLink/></a>.</p>
<p>Be careful, if you send all your coins from an old wallet to a new wallet (from the table above) in one transaction then you will merge all your coins which is bad for privacy - instead, <strong>send the coins individually</strong> or if possible <strong>import the seed in the new wallet</strong>.</p>
</details><details id="where-can-i-find-my-address-qr-code-and-public-key"><summary><a href="#where-can-i-find-my-address-qr-code-and-public-key" aria-hidden="true" class="header-anchor">#</a> <h4>Where can I find my address QR code and public key?</h4></summary>
<p>You can see the address QR code, public key and the key path in the drop down menu of the <code>Receive</code> tab.
Click on the arrow on the left side of the address to reveal the extra details.
You can save the png file of the QR code in the right click menu.</p>
<p><img src="/ReceiveAddressDropDown.png" alt=""></p>
</details><details id="what-derivation-paths-does-wasabi-use"><summary><a href="#what-derivation-paths-does-wasabi-use" aria-hidden="true" class="header-anchor">#</a> <h4>What derivation paths does Wasabi use?</h4></summary>
<p>Wasabi follows <router-link to="/using-wasabi/BIPs.html#bip-84-derivation-scheme-for-p2wpkh-based-accounts">BIP 84: Derivation scheme for P2WPKH Based Accounts</router-link>, so the main path is <code>m/84'/0'/0'</code>.
On TestNet and RegTest Wasabi uses <code>m/84'/0'/0'</code>, and not the standard <code>m/84'/1'/0'</code>.
Due to the CoinJoin implementation, the key depth can be rather large, thus when recovering the gap limit should be elevated to at least 100.</p>
</details><details id="can-i-generate-a-multi-signature-script"><summary><a href="#can-i-generate-a-multi-signature-script" aria-hidden="true" class="header-anchor">#</a> <h4>Can I generate a multi signature script?</h4></summary>
<p>No.</p>
<p>Multi signature scripts define that there need to be m-of-n signatures provided in order to spend this UTXO.
For example in a 2-of-3, Alice alone cannot spend the sats, she needs the collaboration of either Bob or Charlie.
In current implementations, a legacy and SegWit v0 multisig address is clearly distinguishable, there are three public keys and two signatures, and not one single public key and signature.
This means that your anonymity set, the crowd you hide in, gets a lot smaller.
If some one knows that you use a multisig wallet, then they can narrow down their search for your coins.
Thus, use of multisig decreases your privacy, and Wasabi is not implementing tools that degrade your privacy.</p>
<p>Yet multisig is a popular feature, and many Wasabikas do request it for extra security, willing to trade-off some privacy.
<a href="https://electrum.org" target="_blank" rel="noopener noreferrer">Electrum Wallet<OutboundLink/></a> is a fantastic wallet with many features, but only private if you connect to your own Electrum server full node.
Electrum can be used to create different types of m-of-n multisig scripts, including the use of hardware wallets.</p>
<p>Anyway, since Wasabi is using the Hardware Wallet Interface with Partially Signed Bitcoin Transactions (PSBT), the implementation might come in #twoweeks, check the <router-link to="/building-wasabi/ToDo.html">ToDo list</router-link>.
Schnorr key and signature aggregation with MuSig increases the privacy, since only one public key, not n, are committed on the timechain.
So when Schnorr is activated in the Bitcoin consensus layer, in #twoweeks, there are no privacy concerns standing in the way of Wasabi multisig!</p>
</details><details id="how-does-wasabi-know-of-incoming-transactions-to-the-mempool"><summary><a href="#how-does-wasabi-know-of-incoming-transactions-to-the-mempool" aria-hidden="true" class="header-anchor">#</a> <h4>How does Wasabi know of incoming transactions to the mempool?</h4></summary>
<p>When Wasabi is running, it connects to random Bitcoin peer to peer nodes and listens for their gossip of all transactions on the network.
Based on this information Wasabi builds its own local mempool of unconfirmed transactions.
So when you have Wasabi running, you will be notified about an incoming receiving transaction as soon as it is gossiped on the network.
But when Wasabi is offline, it does not listen to the network and it will not know about your unconfirmed transaction when you next start up Wasabi.
In this case you have to wait until your transaction is confirmed in a block, and based on the <router-link to="/BIPs.html#bip-158-compact-block-filters-for-light-clients">BIP 158 block filters</router-link> Wasabi will download that whole block including your transaction from a random P2P node.</p>
</details><h2 id="send"><a class="header-anchor" href="#send">#</a> Send</h2>

  <div class="ytEmbed" data-id="PRlAAxunmdU" style="background-image:url(https://img.youtube.com/vi/PRlAAxunmdU/hqdefault.jpg);">
    <iframe
      title="YouTube PRlAAxunmdU"
      data-src="https://www.youtube-nocookie.com/embed/PRlAAxunmdU?&autoplay=1&autohide=1&modestbranding=1&color=white&rel=0"
      frameborder="0"
      allow="autoplay;encrypted-media;picture-in-picture"
      allowfullscreen
    ></iframe>
  </div>

  <div class="ytEmbed" data-id="AdmlM-Qvco0" style="background-image:url(https://img.youtube.com/vi/AdmlM-Qvco0/hqdefault.jpg);">
    <iframe
      title="YouTube AdmlM-Qvco0"
      data-src="https://www.youtube-nocookie.com/embed/AdmlM-Qvco0?&autoplay=1&autohide=1&modestbranding=1&color=white&rel=0"
      frameborder="0"
      allow="autoplay;encrypted-media;picture-in-picture"
      allowfullscreen
    ></iframe>
  </div>
<details id="what-are-coins"><summary><a href="#what-are-coins" aria-hidden="true" class="header-anchor">#</a> <h4>What are coins?</h4></summary>
<p>Bitcoin uses a system of inputs and outputs to keep track who owns how many sats.
Every transaction specifies one or more inputs, the chunk of bitcoin being spent, and one or more outputs, the destination of who receives the bitcoin.
A coin is also called an unspent transaction output UTXO, meaning that this output has not been used as the input of a new transaction - it is yet to be spent.
In order to spend a UTXO, the valid signature and script has to be provided in the transaction.
This ensures that only with knowledge of the correct private key can this coin be sent to a new address.
This chain of links between inputs being spent and outputs being generated is verified by every full node, and stored on the timechain.</p>
</details><details id="why-is-coin-control-so-important"><summary><a href="#why-is-coin-control-so-important" aria-hidden="true" class="header-anchor">#</a> <h4>Why is coin control so important?</h4></summary>
<p>Coin control is a feature in Wasabi that allows the user to choose which coins are to be spent as inputs in an outgoing transaction.
Coin control is aimed to avoid as much as possible transactions where privacy leaks are caused by amounts, change addresses, the transaction graph and the common-input-ownership heuristic.</p>
<p>Satoshis, the base currency in the Bitcoin network, are fungible units of account.
It's just a number that shows how much value is being transferred, and the number <code>100</code> is &quot;the same&quot; any time the number <code>100</code> is used.
The 9000 sats you spend on stickers are equal to the 9000 sats you spend on coffee.
Just like 1 gram of gold atoms are equal to any other 1 gram of gold atoms.</p>
<p>However, the unspent transaction outputs, the &quot;coins&quot; that hold the satoshi themselves are not fungible.
Every UTXO is a unique snowflake that has its own transaction history, as well as an independent spending condition.
The coin worth 2 bitcoin and locked by Alice's public key is not the same as the UTXO worth 5 bitcoin locked by the 2-of-3 multi signature of Bob, Charlie and David.
So when sending bitcoin, it's important to consider which actual outputs are being sent in the transaction.</p>
<p>It might be a problem when Alice sends the coin she received for a months worth of labor, in exchange for a coffee in Bob's store.
Now Bob knows the amount Alice gets paid, and this is none of his business.
Alice can protect herself against this by using a CoinJoin UTXO, because now Bob can not know the previous transactions from Alice.</p>
</details><details id="how-do-i-set-a-destination-address"><summary><a href="#how-do-i-set-a-destination-address" aria-hidden="true" class="header-anchor">#</a> <h4>How do I set a destination address?</h4></summary>
<p>In the <code>Send</code> tab, there is a text box for the <code>Address</code> right under the coin list.
If you have an address in the clipboard, then it is automatically pasted when you click on the box.
You can also type in the Bech32 address manually, there is a checksum to help you identify typos.
Be careful and double check the address, there is no way to revert this transaction and change the destination.
So make sure that the coins get into the right hands.</p>
</details><details id="can-i-pay-to-many-addresses"><summary><a href="#can-i-pay-to-many-addresses" aria-hidden="true" class="header-anchor">#</a> <h4>Can I pay to many addresses?</h4></summary>
<p>Unfortunately pay to many is not not yet implemented in the GUI.
However, you can use the <router-link to="/using-wasabi/RPC.html#send">RPC server <code>send</code> call</router-link> and specify multiple receiving addresses.</p>
</details><details id="how-do-i-set-the-payment-amount"><summary><a href="#how-do-i-set-the-payment-amount" aria-hidden="true" class="header-anchor">#</a> <h4>How do I set the payment amount?</h4></summary>
<p>After you select one or more coins as inputs in <code>Send</code> tab, say two anonset coins worth 0.1 bitcoin each.
You can manually set the exact amount that the destination address will receive in the output of the transaction, say 0.15 bitcoin.
Then Wasabi will help you with automatically calculating the precise change output value with <code>inputs - destination output - confirmation fee</code>.</p>
<p><img src="/SendAmountFeePassword.png" alt=""></p>
</details><details id="how-can-i-use-the-max-button"><summary><a href="#how-can-i-use-the-max-button" aria-hidden="true" class="header-anchor">#</a> <h4>How can I use the MAX button?</h4></summary>
<p>When you select one or more coins as inputs in <code>Send</code> tab, say two anonset coins worth each 0.1 bitcoin.
You can click the <code>MAX</code> button and the transaction will have only one output with the destination address, and no change output.
Wasabi will calculate the precise value for the destination output with <code>inputs - confirmation fee</code>.
This means you send the entire two coins to the receiving address, and there is no change coming back to your own wallet, you are sending a &quot;whole coin&quot;.</p>
<p><img src="/SendAmountFeePassword.png" alt=""></p>
<p>The timechain spy heuristic is that this is a transaction to yourself, for example to your hardware wallet for long-term hodling.
Most of the time this assumption is correct - the amount of an external payment is rarely exactly the same as the value of the sum of coins in the input, thus requiring change.
It does not matter what value the coin has when you send it to yourself, thus there is no change.
But you can use this assumption to your advantage by sending the MAX amount to your external destination, for example for pizza at the tribe gathering.
If the change would be only a small amount, maybe you accept the overpayment as price for your privacy.
If the input is not high enough value for the payment, maybe the receiver accepts a slight underpayment.
You can also use payment rails like Lightning Network to send the small value change privately off-chain.</p>
<div class="custom-block tip"><p class="custom-block-title">TIP</p>
<p>When using the MAX button, it looks like you send back to yourself.
This can be used to spy on you!
But you can also use it to your advantage when paying others.</p>
</div>
</details><details id="why-does-wasabi-choose-a-new-random-node-every-time-i-send-a-transaction"><summary><a href="#why-does-wasabi-choose-a-new-random-node-every-time-i-send-a-transaction" aria-hidden="true" class="header-anchor">#</a> <h4>Why does Wasabi choose a new random node every time I send a transaction?</h4></summary>
<p>When you broadcast a transaction from a full node, that transaction is flooded onto the network.
Essentially, all nearby nodes are passed your transaction, and those nodes will pass to all of their nearby nodes, etc.
However, if a malicious adversary were to get enough relay nodes in the network, they could pretty easily connect the initial location of a transaction by simply observing from which node the transaction appeared first.
For this reason, broadcasting transaction through your own node may reveal your IP address.</p>
<p>So to fix this Wasabi broadcasts your transactions to a random node, and messages that node through TOR, so the node cannot detect your IP address.
When you want to subsequently send another transaction on the network, Wasabi destroys the original TOR bridge and connection to the node and establishes a new TOR bridge and connection with a brand new node.
This reduces the risk of a passive bystander being able to link two transactions together that appear from the same location.</p>
</details><details id="what-fee-should-i-select"><summary><a href="#what-fee-should-i-select" aria-hidden="true" class="header-anchor">#</a> <h4>What fee should I select?</h4></summary>
<p>Wasabi uses the <a href="https://bitcointechtalk.com/an-introduction-to-bitcoin-core-fee-estimation-27920880ad0" target="_blank" rel="noopener noreferrer">smartfee<OutboundLink/></a> estimation algorithm provided by bitcoind.
This integrates both data from recent blocks, as well as the local mempool to estimate the current and future demand for blockspace.
The lower the fee is, the longer the estimated wait; and the higher the fee, the faster the confirmation will come.
There are several different confidence levels, each of them gives an educated guess how soon the transaction will confirm.
But the provided time frames are only a rough estimation, and not at all a precise metric.</p>
<p><img src="/SendFeeSlider.png" alt=""></p>
<p>Because confirmation fee estimation is more an art than a science, you can also set the fee manually.
Then you can go after your gut feeling, <a href="https://jochen-hoenicke.de/queue/#0,24h" target="_blank" rel="noopener noreferrer">mempool chart analysis<OutboundLink/></a>, or just putting the minimum of 1 sat/vByte.</p>
<p><img src="/SendNoFee.png" alt=""></p>
<p>For a transaction to yourself, for example from your hot CoinJoin wallet to your hardware wallet, you don't need to have fast confirmation, so you can set a low fee.
But to send from the hot CoinJoin wallet to the coffee shop, you might want to get faster confirmation, thus paying a higher fee.
This really depends on your own time preference in every unique moment.</p>
<div class="custom-block tip"><p class="custom-block-title">Remember</p>
<p>These sats are precious, so don't overpay on fees!</p>
</div>
</details><details id="how-do-i-set-custom-fee-rate"><summary><a href="#how-do-i-set-custom-fee-rate" aria-hidden="true" class="header-anchor">#</a> <h4>How do I set custom fee rate?</h4></summary>
<p>Go to <code>Settings</code> and under the UI category turn on <code>Manual fee entry</code>.
In the <code>Send</code> tab, simply click on the <code>Fee</code> box and manually type the fee rate (sat/vByte) you want.</p>
</details><details id="how-can-i-display-the-fee-in-satoshis-per-byte"><summary><a href="#how-can-i-display-the-fee-in-satoshis-per-byte" aria-hidden="true" class="header-anchor">#</a> <h4>How can I display the fee in satoshis per byte?</h4></summary>
<p>The fee you pay to get confirmation on the Bitcoin timechain is denominated in satoshis per virtual byte.
This means that the larger your transaction size, meaning the number of inputs and outputs, the more total bitcoin you have to pay for confirmation.
If you want faster confirmation, then you have to pay proportionally more sats per vByte.</p>
<p>You can toggle the display of the fee between <code>sat/vByte</code> &amp; <code>percentage of transferred value</code> &amp; <code>total bitcoin</code> &amp; <code>total USD</code> by clicking on the text of the fee.</p>
</details><details id="how-do-i-select-coins-for-spending"><summary><a href="#how-do-i-select-coins-for-spending" aria-hidden="true" class="header-anchor">#</a> <h4>How do I select coins for spending?</h4></summary>
<p>Unlike other Bitcoin wallets, the user cannot spend from Wasabi without selecting coins, since <a href="https://medium.com/@nopara73/coin-control-is-must-learn-if-you-care-about-your-privacy-in-bitcoin-33b9a5f224a2" target="_blank" rel="noopener noreferrer">&quot;Coin Control Is Must Learn If You Care About Your Privacy In Bitcoin&quot;<OutboundLink/></a>, at least for today.
The label field of the <code>Send</code> tab is also compulsory.
The received coins will appear in your <code>Send</code> tab and you'll have to manually select which coins you'll want to spend from.
By clicking on the <code>Max</code> button, one can spend all selected coins.
Spending whole coins is beneficial to privacy.
<img src="/Send.png" alt=""></p>
</details><details id="how-is-the-transaction-broadcasted"><summary><a href="#how-is-the-transaction-broadcasted" aria-hidden="true" class="header-anchor">#</a> <h4>How is the transaction broadcasted?</h4></summary>
<p>Wasabi previously did not maintain its P2P connections over Tor.
Since Wasabi is a non-listening node, broadcasting transactions through other P2P nodes over the clearnet would’ve let the peer to link your IP address to the transaction.
This is why we were broadcasting our transactions to our backend server over Tor.
Now, we started tunneling all our P2P traffic through Tor, too:
We did it in a way that we only connect to onion nodes, so end to end encryption is now enforced between us and our peers.
All this without involving any exit node.
We connect to each peer through a different Tor stream.
This enabled us to replace our transaction broadcasting mechanism.
Now, we broadcast transactions to only one peer over Tor and immediately after that we disconnect the peer.</p>
<p>If Wasabi cannot broadcast a transaction through a random node over Tor, it will (in the last resort) send the transaction to the coordinator backend for broadcasting.</p>
<p>Once a transaction is sent, Wasabi will always open a new Tor circuit with a new random node on the network, in order to avoid giving away too much information to one party.
When you send two consecutive transactions via Wasabi, you can be sure that they appear in two very different places on the network.</p>
<p>Wasabi will implement the <router-link to="/using-wasabi/BIPs.html#bip-156-dandelion-privacy-enhancing-routing">Dandelion</router-link> protocol for transaction broadcasting when the Bitcoin network adopts it.</p>
</details><details id="what-is-the-cluster-history"><summary><a href="#what-is-the-cluster-history" aria-hidden="true" class="header-anchor">#</a> <h4>What is the cluster history?</h4></summary>
<p>Clusters are a property of a Bitcoin wallet with strong coin-control and good labeling.
When you use Wasabi, you must label every coin that you receive with the observers.
The reason why this is important, is that your &quot;wallet&quot; is really just a collection of coins (similar to a physical wallet, not to a bank account).
When you receive coins from somewhere to a labeled address, Wasabi will store the label locally on your device, for example:</p>
<p><code>----&gt; 0.65 BTC (Bob)</code></p>
<p>Now if you receive money from Alice who uses an exchange, then your label would look like this:</p>
<p><code>----&gt; 2.1 BTC (Alice, exchange)</code></p>
<p>Now here is where things can be a bit tricky for folks unfamiliar with Bitcoin.
Suppose you wanted to send all of your coins to a hardware wallet.
So you think to yourself &quot;What's the harm in sending my money to one address?&quot;</p>
<p>This is how the transaction will look like:</p>
<!--beforebegin--><div class="language- extra-class"><!--afterbegin--><pre v-pre class="language-text"><code>0.65 BTC (Bob)           -----&gt;  2.75 BTC (Bob, Alice, exchange)
2.1 BTC (Alice, exchange)
</code></pre>
<!--beforeend--></div><!--afterend--><p>The problem with this transaction, is your boss knows you, and knows that the 0.65 BTC is in your possession, and can monitor your transaction behavior.
But when you combine (consolidate) your coins in this way, you reveal to your boss that you also have 2.1 BTC from somewhere else, and you reveal to the exchange that you have 0.65 bitcoin from somewhere else.</p>
<p>When you CoinJoin (mix) coins with Wasabi, you actually de-link the trail from your boss/exchange, to the coins in your wallet.
The coin will have an anonymity set &gt; 1, and typically will have a <img src="/ShieldGreen.png" alt="green" class="shield" /> shield.
This coin can now be spent without having to worry about your boss or the exchange tracking your behavior.</p>
<p>However, when you mix a coin, there is often change.
This change is marked in a red <code>x</code> and has an anonymity set = 1 (with a couple of small exceptions regarding remixing).
The change is completely linked to your coins before the mix, and so needs to be dealt with properly.
If you combine the tiny bit of change you received from your boss and from the exchange, they still know how much money you had (but not where you are spending it).</p>
<p>So the idea around clusters is to make it easier for users to follow the transaction graph.
The transaction graph is the history of where a coin has been, and is important if different histories need to be separated.
For example, if you buy coins anonymously in a P2P way, you should try to avoid mixing those coins with coins you got in a public way (donation, exchange, etc.).</p>
</details><details id="what-s-the-difference-between-send-and-build-transaction"><summary><a href="#what-s-the-difference-between-send-and-build-transaction" aria-hidden="true" class="header-anchor">#</a> <h4>What's the difference between Send and Build Transaction?</h4></summary>
<p>The only difference is that <code>Build Transaction</code> does not propagate the transaction, it simply builds it.
It works differently for watch-only and hardware wallets than normal wallets.</p>
<p>In summary:</p>
<table>
<thead>
<tr>
<th style="text-align:center">.</th>
<th style="text-align:left">Hot wallet</th>
<th style="text-align:left">Watch-only wallet</th>
<th style="text-align:left">Hardware wallet</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">Build tx</td>
<td style="text-align:left">Send tab, Build tx tab</td>
<td style="text-align:left">Send tab, Build tx tab</td>
<td style="text-align:left">Send tab, Build tx tab</td>
</tr>
<tr>
<td style="text-align:center">Sign tx</td>
<td style="text-align:left">Send tab, Build tx tab</td>
<td style="text-align:left"></td>
<td style="text-align:left">Send tab</td>
</tr>
<tr>
<td style="text-align:center">Broadcast tx</td>
<td style="text-align:left">Send tab</td>
<td style="text-align:left"></td>
<td style="text-align:left">Send tab</td>
</tr>
</tbody>
</table>
</details><details id="why-wasabi-did-not-send-some-of-my-selected-coins"><summary><a href="#why-wasabi-did-not-send-some-of-my-selected-coins" aria-hidden="true" class="header-anchor">#</a> <h4>Why Wasabi did not send some of my selected coins?</h4></summary>
<p>Because they were not necessary for the transaction.
Wasabi Wallet will use only the necessary coins to make the transaction.</p>
<p>Example: If you select 10 coins with total value of 2 btc and you want to send 1 btc but the sum of 4 coins is enough to make the transaction, then Wasabi will use only those 4 coins.</p>
</details><h2 id="coinjoin"><a class="header-anchor" href="#coinjoin">#</a> CoinJoin</h2>

  <div class="ytEmbed" data-id="ypfZT9GlqTw" style="background-image:url(https://img.youtube.com/vi/ypfZT9GlqTw/hqdefault.jpg);">
    <iframe
      title="YouTube ypfZT9GlqTw"
      data-src="https://www.youtube-nocookie.com/embed/ypfZT9GlqTw?&autoplay=1&autohide=1&modestbranding=1&color=white&rel=0"
      frameborder="0"
      allow="autoplay;encrypted-media;picture-in-picture"
      allowfullscreen
    ></iframe>
  </div>
<details id="what-s-the-legal-status-of-wasabi-coinjoin"><summary><a href="#what-s-the-legal-status-of-wasabi-coinjoin" aria-hidden="true" class="header-anchor">#</a> <h4>What's the legal status of Wasabi/CoinJoin?</h4></summary>
<p>USA: On May 9, 2019, the Financial Crimes Enforcement Network (FinCEN) issued an interpretive guidance that stated the following in section 4.5.1(b):</p>
<blockquote>
<p>An anonymizing software provider is not a money transmitter. FinCEN regulations exempt from the definition of money transmitter those persons providing &quot;the delivery, communication, or network access services used by a money transmitter to support money transmission services.&quot;</p>
</blockquote>
<p>Wasabi is an Anonymizing software provider so it is not a money transmitter, thus not under Bank Secrecy Act (BSA) regulations.
Basically we can continue to operate like now and it is compliant.</p>
<p>Here's a great explanation about it:</p>

  <div class="ytEmbed" data-id="tLOMcU8MhWM" style="background-image:url(https://img.youtube.com/vi/tLOMcU8MhWM/hqdefault.jpg);">
    <iframe
      title="YouTube tLOMcU8MhWM"
      data-src="https://www.youtube-nocookie.com/embed/tLOMcU8MhWM?start=1305&autoplay=1&autohide=1&modestbranding=1&color=white&rel=0"
      frameborder="0"
      allow="autoplay;encrypted-media;picture-in-picture"
      allowfullscreen
    ></iframe>
  </div>
</details><details id="why-aren-t-there-smaller-equal-denomination-outputs-like-0-05-btc"><summary><a href="#why-aren-t-there-smaller-equal-denomination-outputs-like-0-05-btc" aria-hidden="true" class="header-anchor">#</a> <h4>Why aren't there smaller equal denomination outputs like 0.05 BTC?</h4></summary>
<p>There are many reasons for that.
The most prominent one may be DoS attack issues.
In fact ZeroLink's DoS protection have been designed with 1BTC in mind, not with 0.1BTC, so we may even have to elevate it if someone with sufficient resources would decide to go for DoS attacking Wasabi.</p>
<p>Everything in Bitcoin (and life) is about trade offs.
When we build CoinJoin transactions on the Bitcoin Blockchain, remember that we always have to pay the miner fees.
Miner fees are not dependent on the value of Bitcoin being transferred, rather, only on the size of the transaction in (v)bytes.
So that means constructing a CoinJoin with 0.1 BTC outputs, with 100 participants, and constructing a CoinJoin with 0.01 BTC Outputs with 100 participants will cost the same in terms of miner fees.</p>
<p>So let's dig into the numbers a bit further.
What does it cost (from the miner perspective) to participate in a CoinJoin? Well most users will provide 1 input, and 2 outputs (change + mixed UTXO) and we can calculate the vbytes like so:</p>
<div class="custom-block tip"><p class="custom-block-title">TIP</p>
<p>1 * (68 vbytes) + 2 * (33 vbytes) = 134 vbytes</p>
</div>
<p>But it is important to note that many users provide 2 inputs (UTXOs) or even sometimes 3 or 4, so we should really put a multiplier of 1.5x on the inputs:</p>
<div class="custom-block tip"><p class="custom-block-title">TIP</p>
<p>1.5 * (68 vbytes) + 2 * (33 vbytes) = 168 vbytes</p>
</div>
<p>Excellent, this is the Cost-per-participant of an equal-output CoinJoin.
Now let's consider the variable miner fees in sat/vbyte that we might pay to get the CoinJoin mined within a reasonable time (&lt;24 hours):</p>
<div class="custom-block tip"><p class="custom-block-title">TIP</p>
<p>Minimum: 2 sat/vbyte: 336 satoshis per participant
Average: 10 sat/vbyte: 1,680 satoshis per participant
High: 100 sat/vbyte: 16,800 satoshis per participant</p>
</div>
<p>So now let's examine how much (as a percentage) users have to pay for different denominations of equal output coinjoins.
We will take the example of 1 BTC, 0.1 BTC (current setting) and 0.01 BTC (proposed):
First 1 BTC:</p>
<div class="custom-block tip"><p class="custom-block-title">TIP</p>
<p>Minimum: 2 sat/vbyte: 336 satoshis per participant (0.000336 %)
Average: 10 sat/vbyte: 1,680 satoshis per participant (0.00168 %)
High: 100 sat/vbyte: 16,800 satoshis per participant (0.0168 %)</p>
</div>
<p>Notice that for such a large amount, the miner, even in extreme cases only takes &lt;0.02% (note this is not 2%!).
Let's observe for 0.1 BTC:</p>
<div class="custom-block tip"><p class="custom-block-title">TIP</p>
<p>Minimum: 2 sat/vbyte: 336 satoshis per participant (0.00336 %)
Average: 10 sat/vbyte: 1,680 satoshis per participant (0.0168 %)
High: 100 sat/vbyte: 16,800 satoshis per participant (0.168 %)</p>
</div>
<p>Here, we already observe that in some extreme cases, the miner is earning almost 0.2%!
Recall that Wasabi has a coordinator fee that is capped at 0.3%, so in these extreme cases the total fee paid by the user (you) is closer to 0.5%.
Now we proceed to go to a smaller denomination, 0.01 BTC:</p>
<div class="custom-block tip"><p class="custom-block-title">TIP</p>
<p>Minimum: 2 sat/vbyte: 336 satoshis per participant (0.0336 %)
Average: 10 sat/vbyte: 1,680 satoshis per participant (0.168 %)
High: 100 sat/vbyte: 16,800 satoshis per participant (1.68 %)</p>
</div>
<p>Notice that in the average case, users are regularly paying almost 0.5% for CoinJoining, and only 60% of this is going to the Wasabi Coordinator.
In the extreme case, which simply cannot be overlooked as the network is volatile in terms of daily usage, the miner is earning 5.5x what Wasabi coordinator is charging, and the users are burdened with a 2% fee for CJ!
This is simply ridiculous!
So there you have it! Here is the trade-off with CJ output denominations and why it currently makes sense for 0.1 BTC, but not for much lower.</p>
</details><details id="what-are-the-fees-for-the-coinjoin"><summary><a href="#what-are-the-fees-for-the-coinjoin" aria-hidden="true" class="header-anchor">#</a> <h4>What are the fees for the CoinJoin?</h4></summary>
<p>You pay a coordinator fee of 0.003% * anonymity set.
If the anonymity set of a coin is 50 then you pay 0.003% * 50 (=0.15%).
If you set the target anonymity set to 53 then Wasabi will continue mixing until this is reached, so you may end up with an anonymity set of say 60, and you will pay 0.003% * 60 (=0.18%).</p>
<p>There are also edge cases where you do not pay the full coordinator fee or where you pay more.
For example if you're the smallest registrant to a round, you will never pay a coordinator fee.
Also when you are remixing and you cannot pay the full coordinator fee with your input, then you only pay as much as you have, but if the change amount leftover would be too small, then that is also added to the coordinator fee.
Currently the minimum change amount to be paid out is 0.7% of the base denomination (~0.1BTC.)</p>
<p>It is also possible that you get more back from mixing than you put in.
This happens when network fees go down between the start of the round and its end.
In this case, the difference is split between the active outputs of the mix.</p>
</details><details id="what-is-the-anonymity-set"><summary><a href="#what-is-the-anonymity-set" aria-hidden="true" class="header-anchor">#</a> <h4>What is the anonymity set?</h4></summary>
<p>The anonymity set is effectively the size of the group you are hiding in.</p>
<p>If 3 people take part in a CoinJoin (with equal size inputs) and there are 3 outputs then each of those output coins has an anonymity set of 3.</p>
<!--beforebegin--><div class="language- extra-class"><!--afterbegin--><pre v-pre class="language-text"><code>0.1 BTC (Alice)       0.1 BTC (Anon set 3)
0.3 BTC (Bob)     -&gt;  0.1 BTC (Anon set 3)
0.4 BTC (Charlie)     0.1 BTC (Anon set 3)
                      0.2 BTC (Change Coin Bob)
                      0.3 BTC (Change Coin Charlie)
</code></pre>
<!--beforeend--></div><!--afterend--><p>There is no way to know which of the anon set output coins are owned by which of the input owners.</p>
<p>All an observer knows is that a specific anon set output coin is owned by one of the owners of one of the input Coins i.e. 3 people - hence an anonymity set of 3.</p>
<p>Your Wasabi software has limited information on what the anonymity set should be, so the anonymity set that the software presents you is just an estimation, not an accurate value.
With Wasabi we are trying to do lower estimations, rather than higher ones.</p>
</details><details id="what-are-the-equal-denominations-created-in-one-mixing-round"><summary><a href="#what-are-the-equal-denominations-created-in-one-mixing-round" aria-hidden="true" class="header-anchor">#</a> <h4>What are the equal denominations created in one mixing round?</h4></summary>
<p>In every CoinJoin round the minimum to register is roughly 0.1 BTC, you need to have at least this much to participate.
Within the same transaction, Wasabi also efficiently generates larger value zero link CoinJoin denominations.
They are 0.2, 0.4, 0.8, 1.6, 3.2, and so on...
The possible values of equal output that can be created are 0.1 x 2^n where n is a positive integer.
This is the mathematically most efficient way to get anonymity set for any amount you desire.
For example, with a 0.7 BTC input you would expect the following outputs: ~0.1, ~0.2, ~0.4 BTC.</p>

  <div class="ytEmbed" data-id="PKtxzSLPWFU" style="background-image:url(https://img.youtube.com/vi/PKtxzSLPWFU/hqdefault.jpg);">
    <iframe
      title="YouTube PKtxzSLPWFU"
      data-src="https://www.youtube-nocookie.com/embed/PKtxzSLPWFU?&autoplay=1&autohide=1&modestbranding=1&color=white&rel=0"
      frameborder="0"
      allow="autoplay;encrypted-media;picture-in-picture"
      allowfullscreen
    ></iframe>
  </div>

  <div class="ytEmbed" data-id="3Ezru07J674" style="background-image:url(https://img.youtube.com/vi/3Ezru07J674/hqdefault.jpg);">
    <iframe
      title="YouTube 3Ezru07J674"
      data-src="https://www.youtube-nocookie.com/embed/3Ezru07J674?&autoplay=1&autohide=1&modestbranding=1&color=white&rel=0"
      frameborder="0"
      allow="autoplay;encrypted-media;picture-in-picture"
      allowfullscreen
    ></iframe>
  </div>
</details><details id="what-is-the-best-time-to-coinjoin"><summary><a href="#what-is-the-best-time-to-coinjoin" aria-hidden="true" class="header-anchor">#</a> <h4>What is the best time to CoinJoin?</h4></summary>
<p>You can CoinJoin whenever you want.
That said, the ideal way to CoinJoin would be when:</p>
<ol>
<li>
<p>Mempool is clean.
CoinJoins are unfairly cheap when the mempool is empty.
Remember to take a look at websites like <a href="https://jochen-hoenicke.de/queue/#0,24h" target="_blank" rel="noopener noreferrer">Johoe's Bitcoin Mempool Statistics<OutboundLink/></a> or <a href="https://mempool.space/" target="_blank" rel="noopener noreferrer">mempool.space<OutboundLink/></a> to see mempool statistics in real time.</p>
</li>
<li>
<p>Your inputs are the same or little higher as the minimal denomination for the current round.
<router-link to="/using-wasabi/ChangeCoins.html#why-change-is-an-issue">Change is an issue</router-link>.
For this reason, whenever possible it is recommended to CoinJoin with exactly the required denomination for the current round (roughly 0.1 BTC) to not get any change back.</p>
</li>
<li>
<p>Mix at different times
To avoid traffic detection and behavioral analysis, you should CoinJoin at different times (days and hours).</p>
</li>
</ol>
</details><details id="why-are-the-denominations-such-an-odd-number"><summary><a href="#why-are-the-denominations-such-an-odd-number" aria-hidden="true" class="header-anchor">#</a> <h4>Why are the denominations such an odd number?</h4></summary>
<p>The output value changes each round to ensure that you can enqueue a coin and have it remix (mix over and over again - increasing the anonymity set, improving privacy).
As a result the round mixing amount will often be a specific number which generally decreases as the rounds proceed, with a reset once a lower bound is reached.</p>
</details><details id="what-is-happening-in-the-input-registration-phase"><summary><a href="#what-is-happening-in-the-input-registration-phase" aria-hidden="true" class="header-anchor">#</a> <h4>What is happening in the input registration phase?</h4></summary>
<p>During this phase you have the opportunity to register coins that you want to mix in this round.
Your Wasabi client connects to the coordinator server with a unique tor identity called Alice, and with it you send the input proofs, the clear-text change output, and the blinded anonset CoinJoin address.
When all the proofs are valid, the coordinator signs the blinded output without knowing which address this is, and sends this back to Alice.
Since the goal is to have 100 peers in one round, the <router-link to="/using-wasabi/CoinJoin.html#input-registration">input registration phase</router-link> can take some time.
But regardless of how many participants, two hours after the last CoinJoin this phase is complete.</p>
</details><details id="what-is-happening-in-the-connection-confirmation-phase"><summary><a href="#what-is-happening-in-the-connection-confirmation-phase" aria-hidden="true" class="header-anchor">#</a> <h4>What is happening in the connection confirmation phase?</h4></summary>
<p>Because the input registration phase can take up to two hours, the coordinator needs to ensure that everyone is still online and ready to continue.
So in the <router-link to="/using-wasabi/CoinJoin.html#connection-confirmation">connection confirmation phase</router-link> every Alice sends a signal to the coordinator, and when all have checked in, this phase concludes.</p>
</details><details id="what-is-happening-in-the-output-registration-phase"><summary><a href="#what-is-happening-in-the-output-registration-phase" aria-hidden="true" class="header-anchor">#</a> <h4>What is happening in the output registration phase?</h4></summary>
<p>You use some secret parameters to unblind the blinded CoinJoin output to reveal the clear text address that still contains the signature of the coordinator.
Wasabi creates a new tor identity called Bob, and with it you send the unblinded anonset output together with the signature to the coordinator.
The coordinator can now verify his own signature, thus he knows that previously he has confirmed that Alice had all valid inputs.
Immediately after that, Bob disconnects and the <router-link to="/using-wasabi/CoinJoin.html#output-registration">output registration phase</router-link> is complete.</p>
</details><details id="what-is-happening-in-the-signing-phase"><summary><a href="#what-is-happening-in-the-signing-phase" aria-hidden="true" class="header-anchor">#</a> <h4>What is happening in the signing phase?</h4></summary>
<p>After all Alices have registered their inputs and change outputs, and all Bobs their anonset outputs, the coordinator has all the information to build the CoinJoin transaction and include his fee output.
This raw transaction is sent to all Alices, each of them verifies the transaction is valid and then signs it.
The signature is sent back to the coordinator who accumulates all of them and builds the signed final CoinJoin transaction.
The <router-link to="/using-wasabi/CoinJoin.html#signing">singing phase</router-link> is concluded when the coordinator receives all the signatures.</p>
</details><details id="what-is-happening-in-the-broadcasting-phase"><summary><a href="#what-is-happening-in-the-broadcasting-phase" aria-hidden="true" class="header-anchor">#</a> <h4>What is happening in the broadcasting phase?</h4></summary>
<p>In the <router-link to="/using-wasabi/CoinJoin.html#broadcasting">broadcasting phase</router-link> the coordinator sends the signed final CoinJoin transaction to several random Bitcoin peer to peer nodes, and it is gossiped throughout the network to the miners.</p>
</details><details id="is-there-any-additional-anonymity-using-multiple-wallets-for-coinjoins"><summary><a href="#is-there-any-additional-anonymity-using-multiple-wallets-for-coinjoins" aria-hidden="true" class="header-anchor">#</a> <h4>Is there any additional anonymity using multiple wallets for CoinJoins?</h4></summary>
<p>You'd gain 1 less anonymity set than if you'd only mix with one wallet (and Wasabi doesn't display that).
On the other hand, the systemic anonymity is slightly improved if a few people are mixing with multiple wallets, because that removes the certainty on this Blockchain analysis assumption.</p>
</details><details id="how-is-the-anonymity-set-target-determined-for-coinjoins"><summary><a href="#how-is-the-anonymity-set-target-determined-for-coinjoins" aria-hidden="true" class="header-anchor">#</a> <h4>How is the anonymity set target determined for CoinJoins?</h4></summary>
<p><code>2*2 = 4</code> and <code>3*3 = 9</code>. <code>2-&gt;3: 50% increase</code>, <code>4-&gt;9:125%</code> increase.
So remixing with larger anonsets is exponentially more effective than smaller anonsets.
Regarding why do we want 100 number, is among some other reasons, because that was our calculation to be that would make rounds happen in every 2-5 minutes, considering the liquidity of some custodial mixers.
Regarding DoS attack, right now our DoS configuration is set to be pretty permissive and this seems to be sufficient for the time being.
If a DoS attack would happen, Wasabi team would just harden it in the config file and would kick the bad actors out.
Now if even that'd fail, then we can start thinking about lowering the required peers and also other methods.</p>
</details><details id="i-d-like-to-experience-coinjoin-but-i-m-not-comfortable-using-real-bitcoin-what-can-i-do"><summary><a href="#i-d-like-to-experience-coinjoin-but-i-m-not-comfortable-using-real-bitcoin-what-can-i-do" aria-hidden="true" class="header-anchor">#</a> <h4>I'd like to experience CoinJoin but I'm not comfortable using real Bitcoin. What can I do?</h4></summary>
<p>You can try to make a CoinJoin via Wasabi on the Bitcoin <router-link to="/FAQ/FAQ-UseWasabi.html#what-is-testnet">TestNet</router-link> (an alternative Bitcoin blockchain, to be used for testing).
Go to <code>Settings</code> and change the network to <code>TestNet</code>.
You can get tBTC from faucets like:
<a href="https://testnet-faucet.mempool.co/" target="_blank" rel="noopener noreferrer">testnet-faucet.mempool.co<OutboundLink/></a>
or
<a href="https://coinfaucet.eu/en/btc-testnet/" target="_blank" rel="noopener noreferrer">coinfaucet.eu/en/btc-testnet<OutboundLink/></a></p>
</details><details id="does-wasabi-have-to-stay-on-during-coinjoin"><summary><a href="#does-wasabi-have-to-stay-on-during-coinjoin" aria-hidden="true" class="header-anchor">#</a> <h4>Does Wasabi have to stay on during CoinJoin?</h4></summary>
<p>Yes, Wasabi needs to stay on during CoinJoins, you cannot be offline and still participate in CoinJoins.</p>
<p>A CoinJoin transaction is different from a normal transaction, where you are the only person signing, and requires many people to sign <strong>the same transaction</strong>.
Until all the peers are here, no peer knows what transaction to sign.</p>
<p>Here is how Wasabi handles different scenarios:</p>
<table>
<thead>
<tr>
<th style="text-align:center"></th>
<th style="text-align:center">During <router-link to="/FAQ/FAQ-UseWasabi.html#what-is-happening-in-the-input-registration-phase">input registration phase</router-link></th>
<th style="text-align:center">After input registration phase</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">You close Wasabi</td>
<td style="text-align:center">Your registered coins are automatically dequeued</td>
<td style="text-align:center">Wasabi will make you wait until the round finishes</td>
</tr>
<tr>
<td style="text-align:center">Wasabi goes offline</td>
<td style="text-align:center">Your registered coins are automatically timed out by the coordinator after 1 minute</td>
<td style="text-align:center">Your registered coins will be banned for 24h from participating in another CoinJoin. (This is to prevent <a href="https://github.com/nopara73/ZeroLink/#d-dos-attack" target="_blank" rel="noopener noreferrer">DoS attacks<OutboundLink/></a>)</td>
</tr>
</tbody>
</table>
</details><details id="what-if-there-s-a-power-outage-during-coinjoin-do-i-lose-my-coins"><summary><a href="#what-if-there-s-a-power-outage-during-coinjoin-do-i-lose-my-coins" aria-hidden="true" class="header-anchor">#</a> <h4>What if there's a power outage during CoinJoin? Do I lose my coins?</h4></summary>
<p>No you don't.
CoinJoins are atomic, they happen or they don't.
If your wallet crashes or your computer goes offline during CoinJoin you can simply register for a new CoinJoin, look at table <router-link to="/FAQ/FAQ-UseWasabi.html#does-wasabi-have-to-stay-on-during-coinjoin">here</router-link> for more info.</p>
</details><details id="how-much-anonymity-set-do-i-need"><summary><a href="#how-much-anonymity-set-do-i-need" aria-hidden="true" class="header-anchor">#</a> <h4>How much anonymity set do I need?</h4></summary>
<p>It is commonly said that an anonymity set of 50 is sufficient to evade blockchain forensics analysis.
At least one round to re-mix your coins can increase your privacy drastically.
With Wasabi this can be achieved in a matter of hours (or minutes if there are a lot of users).</p>
</details><details id="how-many-rounds-should-i-coinjoin"><summary><a href="#how-many-rounds-should-i-coinjoin" aria-hidden="true" class="header-anchor">#</a> <h4>How many rounds should I CoinJoin?</h4></summary>
<p>There is no simple answer for this.
If you want more anonymity you should CoinJoin multiple times.</p>
</details><details id="are-coins-automatically-requeued-after-the-round-is-complete"><summary><a href="#are-coins-automatically-requeued-after-the-round-is-complete" aria-hidden="true" class="header-anchor">#</a> <h4>Are coins automatically requeued after the round is complete?</h4></summary>
<p>Yes they are, based on the anonymity set target.
If the coins' anonymity sets are below the specified target after a round is complete, then the coins are requeued automatically for the next round.
But when the anonymity sets are above the target after a round, then the coins will no longer be registered automatically.
However, you can manually enqueue them for a new round at any time.</p>
</details><details id="how-can-i-select-utxos-for-coinjoin"><summary><a href="#how-can-i-select-utxos-for-coinjoin" aria-hidden="true" class="header-anchor">#</a> <h4>How can I select UTXOs for CoinJoin?</h4></summary>
<p>You need to go to <code>CoinJoin</code> tab and select your desired UTXO by clicking the checkbox.
It will be queued and registered for the next CoinJoin round.</p>
</details><details id="how-does-my-wallet-communicate-with-the-wasabi-coordinator-server"><summary><a href="#how-does-my-wallet-communicate-with-the-wasabi-coordinator-server" aria-hidden="true" class="header-anchor">#</a> <h4>How does my wallet communicate with the Wasabi coordinator server?</h4></summary>
<p>Wasabi communicates in many ways to the coordinator server, and it is always over the tor network.</p>
<p>First of all, Wasabi uses <router-link to="/using-wasabi/BIPs.html#bip-158-compact-block-filters-for-light-clients">BIP 158 block filters</router-link> to ensure network level privacy.
You can follow these FAQs to have a full explanation on the theme:</p>
<ul>
<li><router-link to="/FAQ/FAQ-UseWasabi.html#what-are-bip-158-block-filters">What are BIP-158 Block Filters?</router-link></li>
<li><router-link to="/FAQ/FAQ-Introduction.html#what-software-supplies-the-block-filters-that-wasabi-uses">What software supplies the block filters that Wasabi uses?</router-link></li>
<li><router-link to="/FAQ/FAQ-Introduction.html#can-the-coordinator-attack-me">Can the coordinator attack me?</router-link></li>
<li><router-link to="/FAQ/FAQ-Introduction.html#is-the-backend-s-coordinator-code-open-source">Is the backend's coordinator code open source?</router-link></li>
</ul>
<p>Then, there are five different phases in a CoinJoin.
You can follow these links to have a full explanation on that:</p>
<ol>
<li><router-link to="/FAQ/FAQ-UseWasabi.html#what-is-happening-in-the-input-registration-phase">INPUT REGISTRATION PHASE</router-link></li>
<li><router-link to="/FAQ/FAQ-UseWasabi.html#what-is-happening-in-the-connection-confirmation-phase">CONNECTION CONFIRMATION PHASE</router-link></li>
<li><router-link to="/FAQ/FAQ-UseWasabi.html#what-is-happening-in-the-output-registration-phase">OUTPUT REGISTRATION PHASE</router-link></li>
<li><router-link to="/FAQ/FAQ-UseWasabi.html#what-is-happening-in-the-signing-phase">SIGNING PHASE</router-link></li>
<li><router-link to="/FAQ/FAQ-UseWasabi.html#what-is-happening-in-the-broadcasting-phase">BROADCASTING PHASE</router-link></li>
</ol>
<p>You also get information about the current mempool for fee estimation as well as the fiat exchange rate.</p>
</details><details id="how-long-does-it-take-to-mix-my-coins"><summary><a href="#how-long-does-it-take-to-mix-my-coins" aria-hidden="true" class="header-anchor">#</a> <h4>How long does it take to mix my coins?</h4></summary>
<p>It depends on many things, the longest period is the wait for all peers to register their coins.
First of all from your desired anonymity set, every round has a goal of 100 anonymity set.
Wasabi is developed in a way that there's a round at least once every two hours.
If the 100 peers registered earlier, then there can be many rounds per hour.
When all peers are registered, then the signing phase is done within a couple of seconds.</p>
<p>Summing up: the faster peers register in the CoinJoins, the faster the mixes are.</p>
</details><details id="what-is-the-coordinator-address"><summary><a href="#what-is-the-coordinator-address" aria-hidden="true" class="header-anchor">#</a> <h4>What is the coordinator address?</h4></summary>
<p>The coordinator gets paid in every CoinJoin.
And for transparency reasons, the same coordinator address is used.</p>
<p>The current address used by the Wasabi coordinator is <code>bc1qa24tsgchvuxsaccp8vrnkfd85hrcpafg20kmjw</code>.</p>
<p>Old addresses:</p>
<ul>
<li><code>bc1qs604c7jv6amk4cxqlnvuxv26hv3e48cds4m0ew</code></li>
</ul>
</details><details id="what-is-the-maximum-number-of-coins-that-can-be-registered-in-a-coinjoin"><summary><a href="#what-is-the-maximum-number-of-coins-that-can-be-registered-in-a-coinjoin" aria-hidden="true" class="header-anchor">#</a> <h4>What is the maximum number of coins that can be registered in a CoinJoin?</h4></summary>
<p>Wasabi Wallet will register only up to 7 coins in a CoinJoin.</p>
</details><details id="why-wasabi-did-not-register-some-of-my-enqueued-coins"><summary><a href="#why-wasabi-did-not-register-some-of-my-enqueued-coins" aria-hidden="true" class="header-anchor">#</a> <h4>Why Wasabi did not register some of my enqueued coins?</h4></summary>
<p>Because they were not necessary for the CoinJoin.
Wasabi Wallet will use only the necessary coins to CoinJoin (up to 7 coins).</p>
<p>Example: If you select 10 coins with total value of 0.2 btc but the sum of 4 coins is enough to CoinJoin, then Wasabi will use only those 4 coins.</p>
</details><h2 id="hardware-wallet"><a class="header-anchor" href="#hardware-wallet">#</a> Hardware Wallet</h2>

  <div class="ytEmbed" data-id="aU8ysH9JH9M" style="background-image:url(https://img.youtube.com/vi/aU8ysH9JH9M/hqdefault.jpg);">
    <iframe
      title="YouTube aU8ysH9JH9M"
      data-src="https://www.youtube-nocookie.com/embed/aU8ysH9JH9M?&autoplay=1&autohide=1&modestbranding=1&color=white&rel=0"
      frameborder="0"
      allow="autoplay;encrypted-media;picture-in-picture"
      allowfullscreen
    ></iframe>
  </div>

  <div class="ytEmbed" data-id="kocEpndQcsg" style="background-image:url(https://img.youtube.com/vi/kocEpndQcsg/hqdefault.jpg);">
    <iframe
      title="YouTube kocEpndQcsg"
      data-src="https://www.youtube-nocookie.com/embed/kocEpndQcsg?&autoplay=1&autohide=1&modestbranding=1&color=white&rel=0"
      frameborder="0"
      allow="autoplay;encrypted-media;picture-in-picture"
      allowfullscreen
    ></iframe>
  </div>

  <div class="ytEmbed" data-id="sM2uhyROpAQ" style="background-image:url(https://img.youtube.com/vi/sM2uhyROpAQ/hqdefault.jpg);">
    <iframe
      title="YouTube sM2uhyROpAQ"
      data-src="https://www.youtube-nocookie.com/embed/sM2uhyROpAQ?&autoplay=1&autohide=1&modestbranding=1&color=white&rel=0"
      frameborder="0"
      allow="autoplay;encrypted-media;picture-in-picture"
      allowfullscreen
    ></iframe>
  </div>
<details id="what-hardware-wallets-does-wasabi-support"><summary><a href="#what-hardware-wallets-does-wasabi-support" aria-hidden="true" class="header-anchor">#</a> <h4>What hardware wallets does Wasabi support?</h4></summary>
<p>The answer is simple:</p>
<div class="custom-block tip"><p class="custom-block-title">TIP</p>
<p>All of them!</p>
</div>
<p>This is thanks to awesome Hardware Wallet Interface of Bitcoin core.</p>
<p>However, not all of the many hardware wallets have been tested and reviewed by the developers.
Everything seems to work fine with the ColdCard, BitBox, Trezor, Ledger and KeepKey.</p>
</details><details id="why-does-wasabi-use-the-hardware-wallet-interface"><summary><a href="#why-does-wasabi-use-the-hardware-wallet-interface" aria-hidden="true" class="header-anchor">#</a> <h4>Why does Wasabi use the Hardware Wallet Interface?</h4></summary>
<p>Wasabi uses the <a href="https://github.com/bitcoin-core/HWI" target="_blank" rel="noopener noreferrer">Bitcoin Core Hardware Wallet Interface [HWI]<OutboundLink/></a>, a python library tool for proper integration of off-line signing devices.
It provides a standard way for any software wallet to communicate with any hardware wallet without needing any device specific drivers.
HWI was developed and carefully reviewed over several years, with outstanding contributions by especially <a href="https://github.com/achow101" target="_blank" rel="noopener noreferrer">Andrew Chow<OutboundLink/></a>.
Wasabi implements C# code that executes the HWI tool.
Wasabi uses this powerful tool because there are no other dependencies necessary to support all the existing and future hardware wallets.</p>
</details><details id="how-can-i-generate-a-wasabi-skeleton-wallet-file-in-coldcard"><summary><a href="#how-can-i-generate-a-wasabi-skeleton-wallet-file-in-coldcard" aria-hidden="true" class="header-anchor">#</a> <h4>How can I generate a Wasabi skeleton wallet file in ColdCard?</h4></summary>
<p>On the ColdCard (Mk2, firmware 2.1.1 and up) you go to <code>&gt;Advanced&gt;MicrcoSD Card&gt;Wasabi Wallet</code> and it will save a skeleton json-file to the MicroSD card in the hardware wallet.</p>
</details><details id="how-can-i-import-the-wasabi-skeleton-wallet-file"><summary><a href="#how-can-i-import-the-wasabi-skeleton-wallet-file" aria-hidden="true" class="header-anchor">#</a> <h4>How can I import the Wasabi skeleton wallet file?</h4></summary>
<p>Take the MicroSD card from the ColdCard and plug it in the computer with the Wasabi Wallet software.
In Wasabi Wallet go to the Wallet Manager, select Hardware Wallet option and in the bottom right corner click <code>Import Coldcard</code>.
Now select the Wasabi skeleton json-file from the MicroSD card, if this fails you can manually enter the file location in Wasabi Wallet window and load the file.</p>
</details><details id="how-can-i-generate-a-receiving-address-of-my-hardware-wallet"><summary><a href="#how-can-i-generate-a-receiving-address-of-my-hardware-wallet" aria-hidden="true" class="header-anchor">#</a> <h4>How can I generate a receiving address of my hardware wallet?</h4></summary>
<p>In Wasabi Wallet you load your previously imported wallet (from Wasabi skeleton, or USB detection) and go to the <code>Receive</code> tab, here you enter a label for the observers of the incoming transaction and click <code>Generate Receive Address</code>.
In the tab below the newly generated receive address can be viewed / copied.</p>
</details><details id="how-can-i-sign-a-transaction-with-a-usb-connected-hardware-wallet"><summary><a href="#how-can-i-sign-a-transaction-with-a-usb-connected-hardware-wallet" aria-hidden="true" class="header-anchor">#</a> <h4>How can I sign a transaction with a USB connected hardware wallet?</h4></summary>
<p>To send a transaction you will need to connect your Hardware wallet and unlock the device (using PIN or password), in Wasabi Wallet you go to the <code>Send</code> tab where you can specify the address to send to, amount of bitcoin to send and which coins to use as input (only use green/private coins here!).
After filling in all transaction details you click <code>Send Transaction</code> to sign it with the connected hardware wallet and broadcast on the network.</p>
</details><details id="how-can-i-build-and-export-a-transaction-to-coldcard"><summary><a href="#how-can-i-build-and-export-a-transaction-to-coldcard" aria-hidden="true" class="header-anchor">#</a> <h4>How can I build and export a transaction to ColdCard?</h4></summary>
<p>In the Wallet Explorer on the right side of the GUI, select <code>YourWallet&gt;Advanced&gt;Build Transaction</code>.
This brings up the <code>Build Transaction</code> tab where you can specify the address, amount of bitcoin and coins to use.
Then by clicking <code>Build Transaction</code> a new tab will open containing the raw transaction data, here you click <code>Export Binary PSBT</code> to save the partially signed bitcoin transaction (PSBT) to a file.
This file should be moved to the MicroSD card that you can then insert in the ColdCard for manual verification and signing.</p>
</details><details id="how-can-i-sign-a-transaction-on-the-coldcard"><summary><a href="#how-can-i-sign-a-transaction-on-the-coldcard" aria-hidden="true" class="header-anchor">#</a> <h4>How can I sign a transaction on the ColdCard?</h4></summary>
<p>On the ColdCard (Mk2, firmware 2.1.1 and up) you enter the PIN code to unlock the hardware wallet and press <code>&gt;Ready To Sign</code> with the MicroSD card containing the previously generated transaction or PSBT-file.
Verify the address and amount and the ColdCard will then create a signed.psbt and final.txn file on the MicroSD card.
The finalized transaction (xxx-final.txn) can now be broadcast by Wasabi Wallet or even a radio or satellite dish if someone is listening!</p>
</details><details id="how-can-i-import-and-broadcast-a-final-transaction-from-coldcard"><summary><a href="#how-can-i-import-and-broadcast-a-final-transaction-from-coldcard" aria-hidden="true" class="header-anchor">#</a> <h4>How can I import and broadcast a final transaction from ColdCard?</h4></summary>
<p>In the Wallet Explorer you go to <code>YourWallet&gt;Advanced&gt;Broadcast Transaction</code> and click <code>Import Transaction</code>, now you can select the previously finalized (and signed) transaction file from the MicroSD card.
If this fails you can manually type the path to this file in Wasabi Wallet to load the transaction.
Now click <code>Broadcast Transaction</code> to send it off over Tor to a random Bitcoin node so it can flood over to the miners for confirmation in a block.</p>
</details><details id="can-i-coinjoin-bitcoins-on-my-hardware-wallet"><summary><a href="#can-i-coinjoin-bitcoins-on-my-hardware-wallet" aria-hidden="true" class="header-anchor">#</a> <h4>Can I CoinJoin bitcoins on my hardware wallet?</h4></summary>
<p>You can't do that directly, you have to send the bitcoins (in small portions &gt; 0.1 BTC if needed) to a <code>hot</code> Wasabi Wallet, do the CoinJoin and then send them back to a new address on the Hardware wallet for cold-storage.</p>
</details><details id="does-ledger-live-server-spy-on-my-xpub"><summary><a href="#does-ledger-live-server-spy-on-my-xpub" aria-hidden="true" class="header-anchor">#</a> <h4>Does Ledger Live server spy on my xpub?</h4></summary>
<p>Yes, when using the Ledger Live software wallet to manage your coins, you send your extended public key to the Ledger company server.
With this information they know exactly how many bitcoins you have and in what transactions you spend them.
To avoid that you can use a Ledger hardware in combination with Wasabi as software interface, and because Wasabi does not leak your xpub, your transaction history is not shared with anyone.
Make sure you are generating a completely new wallet with a new seed phrase backup so that the compromised old wallet is no longer an issue.
You can also go into the Settings of your Ledger and create a PIN-specific passphrase.</p>
<p>To create a new Ledger Wallet <em>offline</em> and make sure that your newly created wallet doesn't leak any information to Ledger's servers you must not use Ledger Live (neither to configure it for the first time, nor to use it).
After that, you can use the wallet in combination with Wasabi without having concerns about your privacy!</p>
<div class="custom-block warning"><p class="custom-block-title">WARNING</p>
<p>You still need Ledger Live app to update the firmware of your Ledger hardware wallet.
By not using Ledger Live, you seriously jeopardize the safety of your funds.
Please consider this carefully before making a decision.</p>
</div>
</details><details id="after-i-coinjoined-my-coins-and-reached-green-anonset-i-sent-them-to-my-hardware-wallet-address-when-i-check-my-hw-via-wasabi-the-coins-are-now-red-why"><summary><a href="#after-i-coinjoined-my-coins-and-reached-green-anonset-i-sent-them-to-my-hardware-wallet-address-when-i-check-my-hw-via-wasabi-the-coins-are-now-red-why" aria-hidden="true" class="header-anchor">#</a> <h4>After I CoinJoined my coins and reached green anonset, I sent them to my hardware wallet address. When I check my HW via Wasabi, the coins are now red. Why?</h4></summary>
<p>Everything is working as expected.</p>
<p>The anonymity set info (number) is tied to your wallet that you used to CoinJoin, if you send a mixed coin to another Wasabi Wallet of yours (hardware wallet or normal wallet) it will have an anonymity set 1 (red) because this wallet doesn't know that the coin was coinjoined.</p>
<p>You should put a meaningful label when you generate a receive address in your hardware wallet, e.g. &quot;coinjoined utxo with anonymity set 70&quot; (something that reminds you that you got this utxo from your Wasabi Wallet and it was coinjoined).</p>
</details><details id="how-can-i-enter-the-pin-of-my-trezor-one"><summary><a href="#how-can-i-enter-the-pin-of-my-trezor-one" aria-hidden="true" class="header-anchor">#</a> <h4>How can I enter the PIN of my Trezor One?</h4></summary>
<p>You can enter the PIN to unlock your Trezor One the same way you use the Trezor browser wallet.
As soon as you plug in the Trezor One in your laptop and open Wasabi, it will show 9 empty buttons, and on the Trezor One screen you will see 9 boxes with numbers in random order.
Inside Wasabi, click on the boxes that correspond to your PIN in the order shown on the Trezor One screen.</p>
</details><details id="how-can-i-type-in-the-passphrase-of-my-trezor-one"><summary><a href="#how-can-i-type-in-the-passphrase-of-my-trezor-one" aria-hidden="true" class="header-anchor">#</a> <h4>How can I type in the passphrase of my Trezor One?</h4></summary>
<p>The Trezor One was a pioneer in offline signing devices, however it has one critical design flaw.
It requires to use the hot computer to input some data, like the PIN or passphrase.
This is contrary to the threat model of offline signing devices where the hot computer should not be trusted.
Wasabi does support the empty button PIN input field, as this is secure to use on the hot wallet.
However, Wasabi does not support to use the hot computer keyboard to type in the passphrase.</p>
</details><details id="how-can-i-type-in-the-passphrase-of-my-trezor-t"><summary><a href="#how-can-i-type-in-the-passphrase-of-my-trezor-t" aria-hidden="true" class="header-anchor">#</a> <h4>How can I type in the passphrase of my Trezor T?</h4></summary>
<p>After connecting the Trezor T to your computer and upon trying to load your wallet, you get a message on the Trezor T to choose where to type your passphrase, on the device or the host (computer), choose the first option (device) then enter the passprase using the touchscreen of your Trezor T.
Wasabi wallet will now load this passphrase protected wallet.</p>
</details><h2 id="history"><a class="header-anchor" href="#history">#</a> History</h2>
<details id="how-can-i-check-the-transactions-history"><summary><a href="#how-can-i-check-the-transactions-history" aria-hidden="true" class="header-anchor">#</a> <h4>How can I check the transactions history?</h4></summary>
<p>In the <code>History</code> tab you see a list of all the transactions made with this Wasabi wallet.
It includes the value being sent out of the wallet, meaning the payment to an external address and the fee.
If the number is red, then you have sent sats out of the wallet - if the number is green, then you have received and stacked sats.
A CoinJoin is a payment within the same wallet, thus it only shows the coordination and mining fee leaving the wallet.
You also have a list of all the transaction identification numbers for detailed reference.
The check mark indicates that the transaction is confirmed in the longest proof-of-work timechain.</p>
<p><img src="/History.png" alt=""></p>
</details><details id="can-i-export-a-list-of-transactions"><summary><a href="#can-i-export-a-list-of-transactions" aria-hidden="true" class="header-anchor">#</a> <h4>Can I export a list of transactions?</h4></summary>
<p>There is currently no convenient way to export a list with transaction details.
However, you can see the <code>wallet.json</code> files inside the <code>WalletBackups</code> folder (you can find it in your <router-link to="/FAQ/FAQ-UseWasabi.html#where-can-i-find-the-wasabi-data-folder">Wasabi data folder</router-link>) which contains all the public keys, labels and anonset.</p>
</details><h2 id="settings"><a class="header-anchor" href="#settings">#</a> Settings</h2>
<details id="what-is-testnet"><summary><a href="#what-is-testnet" aria-hidden="true" class="header-anchor">#</a> <h4>What is Testnet?</h4></summary>
<p>The testnet is an alternative Bitcoin blockchain, to be used for testing.
Testnet coins (tBTC) are separate and distinct from actual bitcoins, and are never supposed to have any value.
This allows application developers or bitcoin testers to experiment, without having to use real bitcoins or worrying about breaking the main bitcoin chain.
You can try to make a <router-link to="/FAQ/FAQ-UseWasabi.html#i-d-like-to-experience-coinjoin-but-i-m-not-comfortable-using-real-bitcoin-what-can-i-do">CoinJoin with Wasabi on the Bitcoin TestNet</router-link> without being afraid of losing 'real' bitcoins.</p>
<p>You can get tBTC from faucets like:
<a href="https://testnet-faucet.mempool.co/" target="_blank" rel="noopener noreferrer">testnet-faucet.mempool.co<OutboundLink/></a>
or
<a href="https://coinfaucet.eu/en/btc-testnet/" target="_blank" rel="noopener noreferrer">coinfaucet.eu/en/btc-testnet<OutboundLink/></a></p>
<p>There have been three generations of testnet.
Testnet2 was just the first testnet reset with a different genesis block, because people were starting to trade testnet coins for real money.
Testnet3 is the current test network.
It was introduced with the 0.7 release, introduced a third genesis block, a new rule to avoid the &quot;difficulty was too high, is now too low, and transactions take too long to verify&quot; problem, and contains blocks with edge-case transactions designed to test implementation compatibility.</p>
</details><details id="how-do-i-connect-my-own-full-node-to-wasabi"><summary><a href="#how-do-i-connect-my-own-full-node-to-wasabi" aria-hidden="true" class="header-anchor">#</a> <h4>How do I connect my own full node to Wasabi?</h4></summary>
<p>There is currently a basic implementation of connecting your full node to Wasabi.
The server will still send you <router-link to="/using-wasabi/BIPs.html#bip-158-compact-block-filters-for-light-clients">BIP 158 block filters</router-link>, and when you realize that a block contains a transaction of yours, then you pull this block from your own full node, instead of a random P2P node, thus you can verify that this is actually a valid block including your transaction.
One attack vector could be that Wasabi lies to you and gives you wrong filters that exclude your transaction, thus you would see in the wallet less coins than you actually control.
<router-link to="/using-wasabi/BIPs.html#bip-157-client-side-block-filtering">BIP 157 solves this</router-link>.</p>
<p>When your full node is on the same hardware [computer, laptop] as your Wasabi Wallet, it will automatically recognize it and pull blocks from there.
If your node is on a remote device [raspberry pi, nodl, server], then you can specify your local IP in the <code>Settings</code> tab, or in line 11 of the config file.</p>

  <div class="ytEmbed" data-id="gWo2RAkIVrE" style="background-image:url(https://img.youtube.com/vi/gWo2RAkIVrE/hqdefault.jpg);">
    <iframe
      title="YouTube gWo2RAkIVrE"
      data-src="https://www.youtube-nocookie.com/embed/gWo2RAkIVrE?&autoplay=1&autohide=1&modestbranding=1&color=white&rel=0"
      frameborder="0"
      allow="autoplay;encrypted-media;picture-in-picture"
      allowfullscreen
    ></iframe>
  </div>
</details><details id="how-can-i-turn-off-tor"><summary><a href="#how-can-i-turn-off-tor" aria-hidden="true" class="header-anchor">#</a> <h4>How can I turn off Tor?</h4></summary>
<p>You can turn off Tor in the Settings.
Note that in this case you are still private, except when you CoinJoin and when you broadcast a transaction.
In the first case, the coordinator would know the links between your inputs and outputs based on your IP address.
In the second case, if you happen to broadcast a transaction of yours to a full node that is spying on you, it will know the link between your transaction and your IP address.</p>
</details><details id="how-can-i-change-the-anonset-target"><summary><a href="#how-can-i-change-the-anonset-target" aria-hidden="true" class="header-anchor">#</a> <h4>How can I change the anonset target?</h4></summary>
<p>In the <code>Settings</code> tab at the bottom you can change the three <code>PrivacyLevelX</code> values of the desired anon set of the
<img src="/ShieldYellow.png" alt="yellow" class="shield" />,
<img src="/ShieldGreen.png" alt="green" class="shield" /> and
<img src="/ShieldCheckmark.png" alt="checkmark" class="shield" />
shield button in the GUI.
The <code>MixUntilAnonymitySet</code> is the last selected value from previous use.</p>
<p>Alternatively, open the config file from the wallet GUI, go to <code>File</code>&gt;<code>Open</code>&gt;<code>Config File</code> and in the last 4 lines you see:</p>
<!--beforebegin--><div class="language-json extra-class"><!--afterbegin--><pre v-pre class="language-json"><code><span class="token property">"MixUntilAnonymitySet"</span><span class="token operator">:</span> <span class="token number">50</span><span class="token punctuation">,</span>
<span class="token property">"PrivacyLevelSome"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
<span class="token property">"PrivacyLevelFine"</span><span class="token operator">:</span> <span class="token number">21</span><span class="token punctuation">,</span>
<span class="token property">"PrivacyLevelStrong"</span><span class="token operator">:</span> <span class="token number">50</span>
</code></pre>
<!--beforeend--></div><!--afterend--><p>Remember that you pay a fee proportional to the Anonymity Set.</p>

  <div class="ytEmbed" data-id="gWo2RAkIVrE" style="background-image:url(https://img.youtube.com/vi/gWo2RAkIVrE/hqdefault.jpg);">
    <iframe
      title="YouTube gWo2RAkIVrE"
      data-src="https://www.youtube-nocookie.com/embed/gWo2RAkIVrE?&autoplay=1&autohide=1&modestbranding=1&color=white&rel=0"
      frameborder="0"
      allow="autoplay;encrypted-media;picture-in-picture"
      allowfullscreen
    ></iframe>
  </div>
</details><details id="what-is-the-dust-threshold"><summary><a href="#what-is-the-dust-threshold" aria-hidden="true" class="header-anchor">#</a> <h4>What is the dust threshold?</h4></summary>
<p>Dust can mean <a href="https://bitcoin.stackexchange.com/questions/10986/what-is-meant-by-bitcoin-dust" target="_blank" rel="noopener noreferrer">a lot of things<OutboundLink/></a>, depending how you look at it.
It can be non economical inputs, that is a UTXO that has less value than the fees it would cost to spend this coin.
A dust attack is actually about <a href="https://en.bitcoin.it/Privacy#Forced_address_reuse" target="_blank" rel="noopener noreferrer">forced address reuse<OutboundLink/></a>, the malicious actor sends very small amounts into old addresses and consolidation of these dust UTXOs can link several coins in a wallet cluster.</p>
<p>Specifically in the context of Wasabi, with the dust threshold settings you can limit the value of coins shown in the GUI.
When you set it to <code>0.0000 5000 bitcoin</code>, and when you receive a coin worth <code>0.0000 4000 bitcoin</code>, then this coin will not be shown in the coin list.</p>
<p><img src="/SettingsDustThreshold.png" alt=""></p>
</details><details id="where-can-i-find-the-logs"><summary><a href="#where-can-i-find-the-logs" aria-hidden="true" class="header-anchor">#</a> <h4>Where can I find the logs?</h4></summary>
<p>In the top left menu <code>File &gt; Open</code> you can see there are several logs available.</p>
<ul>
<li>The <code>Log File</code> shows you the general information about Wasabi Wallet.</li>
<li>The <code>Tor Log File</code> shows the Tor specific logs.</li>
</ul>
<p><img src="/MenuFileOpen.png" alt=""></p>
<p>Alternatively, you can find the logs inside your <router-link to="/FAQ/FAQ-UseWasabi.html#where-can-i-find-the-wasabi-data-folder">Wasabi data folder</router-link></p>
</details><details id="how-to-activate-lurking-wife-mode"><summary><a href="#how-to-activate-lurking-wife-mode" aria-hidden="true" class="header-anchor">#</a> <h4>How to activate Lurking Wife Mode?</h4></summary>
<p>You can activate Lurking Wife Mode from <code>Settings</code> or by clicking on your wallet balance.
You can read more about Lurking Wife Mode <router-link to="/using-wasabi/LurkingWifeMode.html">here</router-link>.</p>
</details><details id="how-can-i-change-to-the-white-theme"><summary><a href="#how-can-i-change-to-the-white-theme" aria-hidden="true" class="header-anchor">#</a> <h4>How can I change to the white theme?</h4></summary>
<p>You can change from the default dark to the white theme in the <code>.walletwasabi/client/Gui/Settings/</code> <router-link to="/FAQ/FAQ-UseWasabi.html#where-can-i-find-the-wasabi-data-folder">data folder</router-link>.
Open the <code>GlobalSettings.json</code> file and change the line from <code>&quot;theme&quot;: &quot;Visual Studio Dark&quot;</code> to <code>&quot;theme&quot;: &quot;Visual Studio Light&quot;</code>.
Save the file and restart Wasabi.
Please note that Wasabi is designed for the dark theme, and some color schemes might not look beautiful in the white mode.</p>
<p><img src="/WhiteMode.png" alt=""></p>
</details><h2 id="coin-control-best-practices"><a class="header-anchor" href="#coin-control-best-practices">#</a> Coin Control Best Practices</h2>

  <div class="ytEmbed" data-id="iyJ81JRvLQk" style="background-image:url(https://img.youtube.com/vi/iyJ81JRvLQk/hqdefault.jpg);">
    <iframe
      title="YouTube iyJ81JRvLQk"
      data-src="https://www.youtube-nocookie.com/embed/iyJ81JRvLQk?&autoplay=1&autohide=1&modestbranding=1&color=white&rel=0"
      frameborder="0"
      allow="autoplay;encrypted-media;picture-in-picture"
      allowfullscreen
    ></iframe>
  </div>

  <div class="ytEmbed" data-id="k4VzJ6dUT9I" style="background-image:url(https://img.youtube.com/vi/k4VzJ6dUT9I/hqdefault.jpg);">
    <iframe
      title="YouTube k4VzJ6dUT9I"
      data-src="https://www.youtube-nocookie.com/embed/k4VzJ6dUT9I?&autoplay=1&autohide=1&modestbranding=1&color=white&rel=0"
      frameborder="0"
      allow="autoplay;encrypted-media;picture-in-picture"
      allowfullscreen
    ></iframe>
  </div>
<details id="can-i-consolidate-anonset-coins"><summary><a href="#can-i-consolidate-anonset-coins" aria-hidden="true" class="header-anchor">#</a> <h4>Can I consolidate anonset coins?</h4></summary>
<p>It is advisable to limit the recombining of mixed coins because it can only decrease the privacy of said coins.
This links all the consolidated UTXOs in one transaction, creating only one output, which then clearly controls all these funds.
That said, if you combine less than 1 BTC it is less likely to reveal your pre-CoinJoin transaction history.
The potential issue comes when you spend that coin.
Depending on what you do with the coin you might reduce the privacy of the resulting change (if you send half your coin to an exchange for example, as they will know that you own the coin change).
As a result it is best not to recombine ALL your mixed change, though you may wish to recombine some coins if you are planning on hodling for many years as this will reduce the fees required to spend the coins later.</p>
<p>If you would like to dive into the details of this topic, you can <a href="https://old.reddit.com/r/WasabiWallet/comments/avxbjy/combining_mixed_coins_privacy_megathread/" target="_blank" rel="noopener noreferrer">read more here<OutboundLink/></a> and see more here:</p>

  <div class="ytEmbed" data-id="Tk8-N1kHa4g" style="background-image:url(https://img.youtube.com/vi/Tk8-N1kHa4g/hqdefault.jpg);">
    <iframe
      title="YouTube Tk8-N1kHa4g"
      data-src="https://www.youtube-nocookie.com/embed/Tk8-N1kHa4g?&autoplay=1&autohide=1&modestbranding=1&color=white&rel=0"
      frameborder="0"
      allow="autoplay;encrypted-media;picture-in-picture"
      allowfullscreen
    ></iframe>
  </div>
</details><details id="how-can-i-send-my-anonset-coins-to-my-hardware-wallet"><summary><a href="#how-can-i-send-my-anonset-coins-to-my-hardware-wallet" aria-hidden="true" class="header-anchor">#</a> <h4>How can I send my anonset coins to my hardware wallet?</h4></summary>
<p>Most hardware wallets communicate with servers to provide you with your balance.
This reveals your public key to the server, which damages your privacy - the hardware company can now theoretically link together all your addresses.
As a result <strong>it is not recommended</strong> that you send your mixed coins to an address associated with your hardware wallet unless you are confident that you have set up your hardware wallet in a way that it does not communicate with a 3rd party server (see below).</p>
<p>You can, however, manage your hardware wallet with the Wasabi interface.
Alternatively, you can use your hardware wallet with Electrum, which connects to your Bitcoin Core full node through <a href="https://github.com/chris-belcher/electrum-personal-server" target="_blank" rel="noopener noreferrer">Electrum Personal Server<OutboundLink/></a>, <a href="https://github.com/kyuupichan/electrumx" target="_blank" rel="noopener noreferrer">ElectrumX<OutboundLink/></a> or <a href="https://github.com/romanz/electrs" target="_blank" rel="noopener noreferrer">Electrs<OutboundLink/></a>.</p>
</details><details id="what-can-i-do-with-small-change"><summary><a href="#what-can-i-do-with-small-change" aria-hidden="true" class="header-anchor">#</a> <h4>What can I do with small change?</h4></summary>
<p>There are no hard and fast rules for what to do with the change.
Generally try to avoid the change and use the <code>Max</code> button extensively to send whole coins.
The most problematic type of change is what has <code>anonymity set 1</code> <img src="/ShieldRed.png" alt="red" class="shield" />.
You should treat it as a kind of toxic waste [handled with great care].
You can spend the change to the same entity as the initial transaction, without loosing any privacy.
Only spend the change to another entity, if these two won't make you trouble knowing you interact with both of them.
If needed, you can consolidate several change coins, but we advise you to do it in a CoinJoin.
In JoinMarket you can specify the exact amount of CoinJoin, so it can be exactly the amount of the change.
Or open a new Lightning Network node (not your main Lightning node), create a channel to a random peer on the network and route the funds back to you.</p>
<div class="custom-block tip"><p class="custom-block-title">TIP</p>
<p>For more information, see this <router-link to="/using-wasabi/ChangeCoins.html">dedicated chapter</router-link>.</p>
</div>
</details><details id="how-can-i-mix-large-amounts"><summary><a href="#how-can-i-mix-large-amounts" aria-hidden="true" class="header-anchor">#</a> <h4>How can I mix large amounts?</h4></summary>
<p>Use Unequal Input Mixing and gain fungibility for UTXOs of 0.1, 0.2, 0.4, 0.8, 1.6, 3.2, ... bitcoin!
Read more: <router-link to="/FAQ/FAQ-UseWasabi.html#what-are-the-equal-denominations-created-in-one-mixing-round">What are the equal denominations created in one mixing round?</router-link></p>

  <div class="ytEmbed" data-id="3Ezru07J674" style="background-image:url(https://img.youtube.com/vi/3Ezru07J674/hqdefault.jpg);">
    <iframe
      title="YouTube 3Ezru07J674"
      data-src="https://www.youtube-nocookie.com/embed/3Ezru07J674?&autoplay=1&autohide=1&modestbranding=1&color=white&rel=0"
      frameborder="0"
      allow="autoplay;encrypted-media;picture-in-picture"
      allowfullscreen
    ></iframe>
  </div>
</details><details id="which-coins-can-i-select-for-coinjoins"><summary><a href="#which-coins-can-i-select-for-coinjoins" aria-hidden="true" class="header-anchor">#</a> <h4>Which coins can I select for CoinJoins?</h4></summary>
<p>You can select any coin, as long as the total sum reaches the minimum to register (usually ~0.1 BTC).</p>
</details><details id="why-do-my-coins-occasionally-get-banned-from-participating-in-coinjoin"><summary><a href="#why-do-my-coins-occasionally-get-banned-from-participating-in-coinjoin" aria-hidden="true" class="header-anchor">#</a> <h4>Why do my coins occasionally get banned from participating in CoinJoin?</h4></summary>
<p>A CoinJoin consists of multiple users registering inputs (coins) and blinded outputs.
Once the appropriate number of participants have registered, the actual transaction (the CoinJoin) is constructed by the coordinator, and given to all participants in the span of about 60 seconds.
At this point, all registered participants must sign off on the CoinJoin, and if a single one of the participants fails to sign their input, the entire CoinJoin must be restarted.</p>
<p>So this introduces a problem, or an attack vector - a malicious user could purposefully register coins, only to wait for the signing phase and not sign.
This would halt the entire CoinJoin process for all other participants and Wasabi would no longer work.</p>
<p>So a simple solution looks like this - the coordinator could collect signatures from all inputs, and if one or more input refuses to sign, the coordinator could record that input and temporarily (or even permanently) ban that coin from participation.
This is a nice solution, as it mitigates a single coin from ruining all CoinJoins, but it too comes with trade-offs.</p>
<p>For example, most of the time, users fail to sign a CoinJoin for non-malicious reasons.
Perhaps their TOR connection went down in precisely that moment, or perhaps their WiFi had a temporary flicker at the wrong time.
Further, some users don't even realize that the signing phase is happening, and sometimes shut down their computer at exactly the wrong moment.
All of these things hinder a successful CoinJoin for all other participants, but by pure accident.</p>
<p>If you are one of the victims of this temporary banning then simply wait for the ban to expire and try again.
The best thing you can do to avoid the issue is to have a strong internet connection and keep your computer online throughout the whole process.</p>
<p><em>NOTE</em>: Banning does not mean freezing.
You can send banned coins to anyone you want.
This is a temporary ban on your coins in participation of the CoinJoin.</p>
</details><details id="what-does-spent-coin-status-mean"><summary><a href="#what-does-spent-coin-status-mean" aria-hidden="true" class="header-anchor">#</a> <h4>What does spent coin status mean?</h4></summary>
<p>The <code>spent</code> coin status is a symptom of corrupted wallet state.
This used to be the largest known bug in Wasabi Wallet.
It affected about 1-5% of users.
This issue was introduced to Wasabi with the <a href="https://github.com/zkSNACKs/WalletWasabi/releases/tag/v1.1.4" target="_blank" rel="noopener noreferrer">v1.1.4 release<OutboundLink/></a> in April, 2019 by adding a wallet cache, that resulted in 12 times faster wallet load.
It was <a href="https://old.reddit.com/r/WasabiWallet/comments/c2hco8/announcement_spent_coin_and_lost_unconfirmed/" target="_blank" rel="noopener noreferrer">thought to be fixed<OutboundLink/></a> in June by adding an autocorrection mechanism, but some users are still reporting this issue, so it is not fixed.</p>
<p>It ultimately got fixed in <a href="https://github.com/zkSNACKs/WalletWasabi/releases/tag/v1.1.10" target="_blank" rel="noopener noreferrer">v1.1.10<OutboundLink/></a> by introducing an upgraded version of <router-link to="/using-wasabi/BIPs.html#bip-158-compact-block-filters-for-light-clients/">BIP 158 block filters</router-link> and changing the wallet cache architecture.</p>
</details></ContentSlotsDistributor>
"},null]}