{"remainingRequest":"/home/user/TowardsLiberty/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/user/TowardsLiberty/node_modules/@vuepress/theme-default/components/PageNav.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/user/TowardsLiberty/node_modules/@vuepress/theme-default/components/PageNav.vue","mtime":1580074455463},{"path":"/home/user/TowardsLiberty/node_modules/cache-loader/dist/cjs.js","mtime":1580074460310},{"path":"/home/user/TowardsLiberty/node_modules/babel-loader/lib/index.js","mtime":1580074461297},{"path":"/home/user/TowardsLiberty/node_modules/cache-loader/dist/cjs.js","mtime":1580074460310},{"path":"/home/user/TowardsLiberty/node_modules/vue-loader/lib/index.js","mtime":1580074456247}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IHJlc29sdmVQYWdlIH0gZnJvbSAnLi4vdXRpbCcKaW1wb3J0IGlzU3RyaW5nIGZyb20gJ2xvZGFzaC9pc1N0cmluZycKaW1wb3J0IGlzTmlsIGZyb20gJ2xvZGFzaC9pc05pbCcKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnUGFnZU5hdicsCiAgcHJvcHM6IFsnc2lkZWJhckl0ZW1zJ10sCiAgY29tcHV0ZWQ6IHsKICAgIHByZXYgKCkgewogICAgICByZXR1cm4gcmVzb2x2ZVBhZ2VMaW5rKExJTktfVFlQRVMuUFJFViwgdGhpcykKICAgIH0sCgogICAgbmV4dCAoKSB7CiAgICAgIHJldHVybiByZXNvbHZlUGFnZUxpbmsoTElOS19UWVBFUy5ORVhULCB0aGlzKQogICAgfQogIH0KfQoKZnVuY3Rpb24gcmVzb2x2ZVByZXYgKHBhZ2UsIGl0ZW1zKSB7CiAgcmV0dXJuIGZpbmQocGFnZSwgaXRlbXMsIC0xKQp9CgpmdW5jdGlvbiByZXNvbHZlTmV4dCAocGFnZSwgaXRlbXMpIHsKICByZXR1cm4gZmluZChwYWdlLCBpdGVtcywgMSkKfQoKY29uc3QgTElOS19UWVBFUyA9IHsKICBORVhUOiB7CiAgICByZXNvbHZlTGluazogcmVzb2x2ZU5leHQsCiAgICBnZXRUaGVtZUxpbmtDb25maWc6ICh7IG5leHRMaW5rcyB9KSA9PiBuZXh0TGlua3MsCiAgICBnZXRQYWdlTGlua0NvbmZpZzogKHsgZnJvbnRtYXR0ZXIgfSkgPT4gZnJvbnRtYXR0ZXIubmV4dAogIH0sCiAgUFJFVjogewogICAgcmVzb2x2ZUxpbms6IHJlc29sdmVQcmV2LAogICAgZ2V0VGhlbWVMaW5rQ29uZmlnOiAoeyBwcmV2TGlua3MgfSkgPT4gcHJldkxpbmtzLAogICAgZ2V0UGFnZUxpbmtDb25maWc6ICh7IGZyb250bWF0dGVyIH0pID0+IGZyb250bWF0dGVyLnByZXYKICB9Cn0KCmZ1bmN0aW9uIHJlc29sdmVQYWdlTGluayAoCiAgbGlua1R5cGUsCiAgeyAkdGhlbWVDb25maWcsICRwYWdlLCAkcm91dGUsICRzaXRlLCBzaWRlYmFySXRlbXMgfQopIHsKICBjb25zdCB7IHJlc29sdmVMaW5rLCBnZXRUaGVtZUxpbmtDb25maWcsIGdldFBhZ2VMaW5rQ29uZmlnIH0gPSBsaW5rVHlwZQoKICAvLyBHZXQgbGluayBjb25maWcgZnJvbSB0aGVtZQogIGNvbnN0IHRoZW1lTGlua0NvbmZpZyA9IGdldFRoZW1lTGlua0NvbmZpZygkdGhlbWVDb25maWcpCgogIC8vIEdldCBsaW5rIGNvbmZpZyBmcm9tIGN1cnJlbnQgcGFnZQogIGNvbnN0IHBhZ2VMaW5rQ29uZmlnID0gZ2V0UGFnZUxpbmtDb25maWcoJHBhZ2UpCgogIC8vIFBhZ2UgbGluayBjb25maWcgd2lsbCBvdmVyd3JpdGUgZ2xvYmFsIHRoZW1lIGxpbmsgY29uZmlnIGlmIGRlZmluZWQKICBjb25zdCBsaW5rID0gaXNOaWwocGFnZUxpbmtDb25maWcpID8gdGhlbWVMaW5rQ29uZmlnIDogcGFnZUxpbmtDb25maWcKCiAgaWYgKGxpbmsgPT09IGZhbHNlKSB7CiAgICByZXR1cm4KICB9IGVsc2UgaWYgKGlzU3RyaW5nKGxpbmspKSB7CiAgICByZXR1cm4gcmVzb2x2ZVBhZ2UoJHNpdGUucGFnZXMsIGxpbmssICRyb3V0ZS5wYXRoKQogIH0gZWxzZSB7CiAgICByZXR1cm4gcmVzb2x2ZUxpbmsoJHBhZ2UsIHNpZGViYXJJdGVtcykKICB9Cn0KCmZ1bmN0aW9uIGZpbmQgKHBhZ2UsIGl0ZW1zLCBvZmZzZXQpIHsKICBjb25zdCByZXMgPSBbXQogIGZsYXR0ZW4oaXRlbXMsIHJlcykKICBmb3IgKGxldCBpID0gMDsgaSA8IHJlcy5sZW5ndGg7IGkrKykgewogICAgY29uc3QgY3VyID0gcmVzW2ldCiAgICBpZiAoY3VyLnR5cGUgPT09ICdwYWdlJyAmJiBjdXIucGF0aCA9PT0gZGVjb2RlVVJJQ29tcG9uZW50KHBhZ2UucGF0aCkpIHsKICAgICAgcmV0dXJuIHJlc1tpICsgb2Zmc2V0XQogICAgfQogIH0KfQoKZnVuY3Rpb24gZmxhdHRlbiAoaXRlbXMsIHJlcykgewogIGZvciAobGV0IGkgPSAwLCBsID0gaXRlbXMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7CiAgICBpZiAoaXRlbXNbaV0udHlwZSA9PT0gJ2dyb3VwJykgewogICAgICBmbGF0dGVuKGl0ZW1zW2ldLmNoaWxkcmVuIHx8IFtdLCByZXMpCiAgICB9IGVsc2UgewogICAgICByZXMucHVzaChpdGVtc1tpXSkKICAgIH0KICB9Cn0K"},{"version":3,"sources":["PageNav.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PageNav.vue","sourceRoot":"node_modules/@vuepress/theme-default/components","sourcesContent":["<template>\n  <div class=\"page-nav\" v-if=\"prev || next\">\n    <p class=\"inner\">\n      <span v-if=\"prev\" class=\"prev\">\n        ←\n        <router-link v-if=\"prev\" class=\"prev\" :to=\"prev.path\">{{ prev.title || prev.path }}</router-link>\n      </span>\n\n      <span v-if=\"next\" class=\"next\">\n        <router-link v-if=\"next\" :to=\"next.path\">{{ next.title || next.path }}</router-link>\n        →\n      </span>\n    </p>\n  </div>\n</template>\n<script>\nimport { resolvePage } from '../util'\nimport isString from 'lodash/isString'\nimport isNil from 'lodash/isNil'\n\nexport default {\n  name: 'PageNav',\n  props: ['sidebarItems'],\n  computed: {\n    prev () {\n      return resolvePageLink(LINK_TYPES.PREV, this)\n    },\n\n    next () {\n      return resolvePageLink(LINK_TYPES.NEXT, this)\n    }\n  }\n}\n\nfunction resolvePrev (page, items) {\n  return find(page, items, -1)\n}\n\nfunction resolveNext (page, items) {\n  return find(page, items, 1)\n}\n\nconst LINK_TYPES = {\n  NEXT: {\n    resolveLink: resolveNext,\n    getThemeLinkConfig: ({ nextLinks }) => nextLinks,\n    getPageLinkConfig: ({ frontmatter }) => frontmatter.next\n  },\n  PREV: {\n    resolveLink: resolvePrev,\n    getThemeLinkConfig: ({ prevLinks }) => prevLinks,\n    getPageLinkConfig: ({ frontmatter }) => frontmatter.prev\n  }\n}\n\nfunction resolvePageLink (\n  linkType,\n  { $themeConfig, $page, $route, $site, sidebarItems }\n) {\n  const { resolveLink, getThemeLinkConfig, getPageLinkConfig } = linkType\n\n  // Get link config from theme\n  const themeLinkConfig = getThemeLinkConfig($themeConfig)\n\n  // Get link config from current page\n  const pageLinkConfig = getPageLinkConfig($page)\n\n  // Page link config will overwrite global theme link config if defined\n  const link = isNil(pageLinkConfig) ? themeLinkConfig : pageLinkConfig\n\n  if (link === false) {\n    return\n  } else if (isString(link)) {\n    return resolvePage($site.pages, link, $route.path)\n  } else {\n    return resolveLink($page, sidebarItems)\n  }\n}\n\nfunction find (page, items, offset) {\n  const res = []\n  flatten(items, res)\n  for (let i = 0; i < res.length; i++) {\n    const cur = res[i]\n    if (cur.type === 'page' && cur.path === decodeURIComponent(page.path)) {\n      return res[i + offset]\n    }\n  }\n}\n\nfunction flatten (items, res) {\n  for (let i = 0, l = items.length; i < l; i++) {\n    if (items[i].type === 'group') {\n      flatten(items[i].children || [], res)\n    } else {\n      res.push(items[i])\n    }\n  }\n}\n</script>\n<style lang=\"stylus\">\n@require '../styles/wrapper.styl'\n\n.page-nav\n  @extend $wrapper\n  padding-top 1rem\n  padding-bottom 0\n  .inner\n    min-height 2rem\n    margin-top 0\n    border-top 1px solid $borderColor\n    padding-top 1rem\n    overflow auto // clear float\n  .next\n    float right\n\n</style>\n"]}]}