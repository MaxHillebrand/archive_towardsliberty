{"remainingRequest":"/home/user/WasabiDocChanged/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/user/WasabiDocChanged/node_modules/@vuepress/theme-default/components/PageEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/user/WasabiDocChanged/node_modules/@vuepress/theme-default/components/PageEdit.vue","mtime":499162500000},{"path":"/home/user/WasabiDocChanged/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/user/WasabiDocChanged/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/user/WasabiDocChanged/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/user/WasabiDocChanged/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBpc05pbCBmcm9tICdsb2Rhc2gvaXNOaWwnCmltcG9ydCB7IGVuZGluZ1NsYXNoUkUsIG91dGJvdW5kUkUgfSBmcm9tICcuLi91dGlsJwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdQYWdlRWRpdCcsCiAgY29tcHV0ZWQ6IHsKICAgIGxhc3RVcGRhdGVkICgpIHsKICAgICAgcmV0dXJuIHRoaXMuJHBhZ2UubGFzdFVwZGF0ZWQKICAgIH0sCgogICAgbGFzdFVwZGF0ZWRUZXh0ICgpIHsKICAgICAgaWYgKHR5cGVvZiB0aGlzLiR0aGVtZUxvY2FsZUNvbmZpZy5sYXN0VXBkYXRlZCA9PT0gJ3N0cmluZycpIHsKICAgICAgICByZXR1cm4gdGhpcy4kdGhlbWVMb2NhbGVDb25maWcubGFzdFVwZGF0ZWQKICAgICAgfQogICAgICBpZiAodHlwZW9mIHRoaXMuJHNpdGUudGhlbWVDb25maWcubGFzdFVwZGF0ZWQgPT09ICdzdHJpbmcnKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuJHNpdGUudGhlbWVDb25maWcubGFzdFVwZGF0ZWQKICAgICAgfQogICAgICByZXR1cm4gJ0xhc3QgVXBkYXRlZCcKICAgIH0sCgogICAgZWRpdExpbmsgKCkgewogICAgICBjb25zdCBzaG93RWRpdExpbmsgPSBpc05pbCh0aGlzLiRwYWdlLmZyb250bWF0dGVyLmVkaXRMaW5rKQogICAgICAgID8gdGhpcy4kc2l0ZS50aGVtZUNvbmZpZy5lZGl0TGlua3MKICAgICAgICA6IHRoaXMuJHBhZ2UuZnJvbnRtYXR0ZXIuZWRpdExpbmsKCiAgICAgIGNvbnN0IHsKICAgICAgICByZXBvLAogICAgICAgIGRvY3NEaXIgPSAnJywKICAgICAgICBkb2NzQnJhbmNoID0gJ21hc3RlcicsCiAgICAgICAgZG9jc1JlcG8gPSByZXBvCiAgICAgIH0gPSB0aGlzLiRzaXRlLnRoZW1lQ29uZmlnCgogICAgICBpZiAoc2hvd0VkaXRMaW5rICYmIGRvY3NSZXBvICYmIHRoaXMuJHBhZ2UucmVsYXRpdmVQYXRoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuY3JlYXRlRWRpdExpbmsoCiAgICAgICAgICByZXBvLAogICAgICAgICAgZG9jc1JlcG8sCiAgICAgICAgICBkb2NzRGlyLAogICAgICAgICAgZG9jc0JyYW5jaCwKICAgICAgICAgIHRoaXMuJHBhZ2UucmVsYXRpdmVQYXRoCiAgICAgICAgKQogICAgICB9CiAgICAgIHJldHVybiBudWxsCiAgICB9LAoKICAgIGVkaXRMaW5rVGV4dCAoKSB7CiAgICAgIHJldHVybiAoCiAgICAgICAgdGhpcy4kdGhlbWVMb2NhbGVDb25maWcuZWRpdExpbmtUZXh0CiAgICAgICAgfHwgdGhpcy4kc2l0ZS50aGVtZUNvbmZpZy5lZGl0TGlua1RleHQKICAgICAgICB8fCBgRWRpdCB0aGlzIHBhZ2VgCiAgICAgICkKICAgIH0KICB9LAoKICBtZXRob2RzOiB7CiAgICBjcmVhdGVFZGl0TGluayAocmVwbywgZG9jc1JlcG8sIGRvY3NEaXIsIGRvY3NCcmFuY2gsIHBhdGgpIHsKICAgICAgY29uc3QgYml0YnVja2V0ID0gL2JpdGJ1Y2tldC5vcmcvCiAgICAgIGlmIChiaXRidWNrZXQudGVzdChyZXBvKSkgewogICAgICAgIGNvbnN0IGJhc2UgPSBvdXRib3VuZFJFLnRlc3QoZG9jc1JlcG8pID8gZG9jc1JlcG8gOiByZXBvCiAgICAgICAgcmV0dXJuICgKICAgICAgICAgIGJhc2UucmVwbGFjZShlbmRpbmdTbGFzaFJFLCAnJykKICAgICAgICAgICsgYC9zcmNgCiAgICAgICAgICArIGAvJHtkb2NzQnJhbmNofS9gCiAgICAgICAgICArIChkb2NzRGlyID8gZG9jc0Rpci5yZXBsYWNlKGVuZGluZ1NsYXNoUkUsICcnKSArICcvJyA6ICcnKQogICAgICAgICAgKyBwYXRoCiAgICAgICAgICArIGA/bW9kZT1lZGl0JnNwYT0wJmF0PSR7ZG9jc0JyYW5jaH0mZmlsZXZpZXdlcj1maWxlLXZpZXctZGVmYXVsdGAKICAgICAgICApCiAgICAgIH0KCiAgICAgIGNvbnN0IGJhc2UgPSBvdXRib3VuZFJFLnRlc3QoZG9jc1JlcG8pCiAgICAgICAgPyBkb2NzUmVwbwogICAgICAgIDogYGh0dHBzOi8vZ2l0aHViLmNvbS8ke2RvY3NSZXBvfWAKICAgICAgcmV0dXJuICgKICAgICAgICBiYXNlLnJlcGxhY2UoZW5kaW5nU2xhc2hSRSwgJycpCiAgICAgICAgKyBgL2VkaXRgCiAgICAgICAgKyBgLyR7ZG9jc0JyYW5jaH0vYAogICAgICAgICsgKGRvY3NEaXIgPyBkb2NzRGlyLnJlcGxhY2UoZW5kaW5nU2xhc2hSRSwgJycpICsgJy8nIDogJycpCiAgICAgICAgKyBwYXRoCiAgICAgICkKICAgIH0KICB9Cn0K"},{"version":3,"sources":["PageEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PageEdit.vue","sourceRoot":"node_modules/@vuepress/theme-default/components","sourcesContent":["<template>\n  <footer class=\"page-edit\">\n    <div class=\"edit-link\" v-if=\"editLink\">\n      <a :href=\"editLink\" target=\"_blank\" rel=\"noopener noreferrer\">{{ editLinkText }}</a>\n      <OutboundLink />\n    </div>\n\n    <div class=\"last-updated\" v-if=\"lastUpdated\">\n      <span class=\"prefix\">{{ lastUpdatedText }}:</span>\n      <span class=\"time\">{{ lastUpdated }}</span>\n    </div>\n  </footer>\n</template>\n<script>\nimport isNil from 'lodash/isNil'\nimport { endingSlashRE, outboundRE } from '../util'\n\nexport default {\n  name: 'PageEdit',\n  computed: {\n    lastUpdated () {\n      return this.$page.lastUpdated\n    },\n\n    lastUpdatedText () {\n      if (typeof this.$themeLocaleConfig.lastUpdated === 'string') {\n        return this.$themeLocaleConfig.lastUpdated\n      }\n      if (typeof this.$site.themeConfig.lastUpdated === 'string') {\n        return this.$site.themeConfig.lastUpdated\n      }\n      return 'Last Updated'\n    },\n\n    editLink () {\n      const showEditLink = isNil(this.$page.frontmatter.editLink)\n        ? this.$site.themeConfig.editLinks\n        : this.$page.frontmatter.editLink\n\n      const {\n        repo,\n        docsDir = '',\n        docsBranch = 'master',\n        docsRepo = repo\n      } = this.$site.themeConfig\n\n      if (showEditLink && docsRepo && this.$page.relativePath) {\n        return this.createEditLink(\n          repo,\n          docsRepo,\n          docsDir,\n          docsBranch,\n          this.$page.relativePath\n        )\n      }\n      return null\n    },\n\n    editLinkText () {\n      return (\n        this.$themeLocaleConfig.editLinkText\n        || this.$site.themeConfig.editLinkText\n        || `Edit this page`\n      )\n    }\n  },\n\n  methods: {\n    createEditLink (repo, docsRepo, docsDir, docsBranch, path) {\n      const bitbucket = /bitbucket.org/\n      if (bitbucket.test(repo)) {\n        const base = outboundRE.test(docsRepo) ? docsRepo : repo\n        return (\n          base.replace(endingSlashRE, '')\n          + `/src`\n          + `/${docsBranch}/`\n          + (docsDir ? docsDir.replace(endingSlashRE, '') + '/' : '')\n          + path\n          + `?mode=edit&spa=0&at=${docsBranch}&fileviewer=file-view-default`\n        )\n      }\n\n      const base = outboundRE.test(docsRepo)\n        ? docsRepo\n        : `https://github.com/${docsRepo}`\n      return (\n        base.replace(endingSlashRE, '')\n        + `/edit`\n        + `/${docsBranch}/`\n        + (docsDir ? docsDir.replace(endingSlashRE, '') + '/' : '')\n        + path\n      )\n    }\n  }\n}\n</script>\n<style lang=\"stylus\">\n@require '../styles/wrapper.styl'\n\n.page-edit\n  @extend $wrapper\n  padding-top 1rem\n  padding-bottom 1rem\n  overflow auto\n\n  .edit-link\n    display inline-block\n    a\n      color lighten($textColor, 25%)\n      margin-right 0.25rem\n  .last-updated\n    float right\n    font-size 0.9em\n    .prefix\n      font-weight 500\n      color lighten($textColor, 25%)\n    .time\n      font-weight 400\n      color #aaa\n\n@media (max-width: $MQMobile)\n  .page-edit\n    .edit-link\n      margin-bottom 0.5rem\n    .last-updated\n      font-size 0.8em\n      float none\n      text-align left\n\n</style>\n"]}]}