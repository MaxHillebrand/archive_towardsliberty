{"remainingRequest":"/home/user/WasabiDocChanged/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/user/WasabiDocChanged/node_modules/cache-loader/dist/cjs.js??ref--1-0!/home/user/WasabiDocChanged/node_modules/vue-loader/lib/index.js??ref--1-1!/home/user/WasabiDocChanged/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/home/user/WasabiDocChanged/docs/.vuepress/variables.js!/home/user/WasabiDocChanged/docs/essays/CoinJoin.md?vue&type=template&id=408c7741&","dependencies":[{"path":"/home/user/WasabiDocChanged/docs/essays/CoinJoin.md","mtime":1579971419601},{"path":"/home/user/WasabiDocChanged/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/user/WasabiDocChanged/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/user/WasabiDocChanged/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/user/WasabiDocChanged/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/user/WasabiDocChanged/node_modules/@vuepress/markdown-loader/index.js","mtime":499162500000},{"path":"/home/user/WasabiDocChanged/docs/.vuepress/variables.js","mtime":1580040145177}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtyZXR1cm4gX2MoJ0NvbnRlbnRTbG90c0Rpc3RyaWJ1dG9yJyx7YXR0cnM6eyJzbG90LWtleSI6X3ZtLiRwYXJlbnQuc2xvdEtleX19LFtfYygnaDEnLHthdHRyczp7ImlkIjoiY29pbmpvaW4ifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiNjb2luam9pbiJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiBDb2luSm9pbiIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIkEgIiksX2MoJ2EnLHthdHRyczp7ImhyZWYiOiJodHRwczovL2VuLmJpdGNvaW4uaXQvUHJpdmFjeSNDb2luSm9pbiIsInRhcmdldCI6Il9ibGFuayIsInJlbCI6Im5vb3BlbmVyIG5vcmVmZXJyZXIifX0sW192bS5fdigiQ29pbkpvaW4iKSxfYygnT3V0Ym91bmRMaW5rJyldLDEpLF92bS5fdigiIGlzIGEgc3BlY2lhbCBCaXRjb2luIHRyYW5zYWN0aW9uIHdoZXJlIHNldmVyYWwgcGVlcnMgZ2V0IHRvZ2V0aGVyIHRvIGxpdGVyYWxseSBqb2luIHRoZWlyIGNvaW5zIGluIGEgc2luZ2xlIHRyYW5zYWN0aW9uLlxuVGhleSBjb2xsYWJvcmF0aXZlbHkgYnVpbGQgYSB0cmFuc2FjdGlvbiB3aGVyZSBlYWNoIG9mIHRoZW0gcHJvdmlkZXMgc29tZSBjb2lucyBhcyBpbnB1dHMsIGFuZCBmcmVzaCBhZGRyZXNzZXMgYXMgb3V0cHV0cy5cblRoZSBjb25jZXB0IGhhcyBiZWVuIGFyb3VuZCBzaW5jZSB0aGUgZWFybHkgZGF5cyBvZiBCaXRjb2luLCBhbmQgaXQgd2FzIGZvcm1hbGl6ZWQgYnkgdGhlIGdyZWF0IEdyZWcgTWF4d2VsbCBpbiAiKSxfYygnYScse2F0dHJzOnsiaHJlZiI6Imh0dHBzOi8vYml0Y29pbnRhbGsub3JnL2luZGV4LnBocD90b3BpYz0yNzkyNDkubXNnMjk4MzkwMiIsInRhcmdldCI6Il9ibGFuayIsInJlbCI6Im5vb3BlbmVyIG5vcmVmZXJyZXIifX0sW192bS5fdigidGhpcyBhd2Vzb21lIGludHJvZHVjdG9yeSB0aHJlYWQiKSxfYygnT3V0Ym91bmRMaW5rJyldLDEpLF92bS5fdigiLiIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIlRoZSBnb2FsIGlzIHRvIGdhaW4gcHJpdmFjeSBieSBicmVha2luZyB0aGUgbGluayBvZiB3aGljaCBpbnB1dCBcInBheXNcIiB3aGljaCBvdXRwdXQsIHNvIHRoYXQgYW55IG9mIHRoZSBvdXRwdXRzIGNhbm5vdCBiZSBhdHRyaWJ1dGVkIHRvIHRoZSBvd25lciBvZiB0aGUgaW5wdXQuXG5UaGVyZWZvcmUsIGl0IGlzIHZlcnkgaW1wb3J0YW50IHRoYXQgdGhlIHZhbHVlcyBvZiB0aGUgb3V0cHV0cyBhcmUgZXhhY3RseSBlcXVhbC5cbldhc2FiaSBlbmFibGVzIHRydXN0bGVzcyAobWVhbmluZyBub2JvZHkgY2FuIHN0ZWFsKSBhbmQgcHJpdmF0ZSAobWVhbmluZyBldmVuIHRoZSBjb29yZGluYXRvciBjYW5ub3Qgc3B5KSBTY2hub3JyIGJsaW5kIHNpZ25hdHVyZSBDb2luSm9pbiBhY2NvcmRpbmcgdG8gdGhlICIpLF9jKCdhJyx7YXR0cnM6eyJocmVmIjoiaHR0cHM6Ly9naXRodWIuY29tL25vcGFyYTczL3plcm9saW5rIiwidGFyZ2V0IjoiX2JsYW5rIiwicmVsIjoibm9vcGVuZXIgbm9yZWZlcnJlciJ9fSxbX3ZtLl92KCJaZXJvTGluayBmdW5naWJpbGl0eSBmcmFtZXdvcmsiKSxfYygnT3V0Ym91bmRMaW5rJyldLDEpLF92bS5fdigiLiIpXSksX3ZtLl92KCIgIiksX2MoJ3AnKSxfYygnZGl2Jyx7c3RhdGljQ2xhc3M6InRhYmxlLW9mLWNvbnRlbnRzIn0sW19jKCd1bCcsW19jKCdsaScsW19jKCdhJyx7YXR0cnM6eyJocmVmIjoiI2RvaW5nLWNvaW5qb2luLXN0ZXAtYnktc3RlcCJ9fSxbX3ZtLl92KCJEb2luZyBDb2luSm9pbiBzdGVwLWJ5LXN0ZXAiKV0pXSksX2MoJ2xpJyxbX2MoJ2EnLHthdHRyczp7ImhyZWYiOiIjemVyb2xpbmstcHJvdG9jb2wtc3RlcC1ieS1zdGVwIn19LFtfdm0uX3YoIlplcm9MaW5rIHByb3RvY29sIHN0ZXAtYnktc3RlcCIpXSksX2MoJ3VsJyxbX2MoJ2xpJyxbX2MoJ2EnLHthdHRyczp7ImhyZWYiOiIjaW5wdXQtcmVnaXN0cmF0aW9uIn19LFtfdm0uX3YoIklucHV0IHJlZ2lzdHJhdGlvbiIpXSldKSxfYygnbGknLFtfYygnYScse2F0dHJzOnsiaHJlZiI6IiNjb25uZWN0aW9uLWNvbmZpcm1hdGlvbiJ9fSxbX3ZtLl92KCJDb25uZWN0aW9uIGNvbmZpcm1hdGlvbiIpXSldKSxfYygnbGknLFtfYygnYScse2F0dHJzOnsiaHJlZiI6IiNvdXRwdXQtcmVnaXN0cmF0aW9uIn19LFtfdm0uX3YoIk91dHB1dCByZWdpc3RyYXRpb24iKV0pXSksX2MoJ2xpJyxbX2MoJ2EnLHthdHRyczp7ImhyZWYiOiIjc2lnbmluZyJ9fSxbX3ZtLl92KCJTaWduaW5nIildKV0pLF9jKCdsaScsW19jKCdhJyx7YXR0cnM6eyJocmVmIjoiI2Jyb2FkY2FzdGluZyJ9fSxbX3ZtLl92KCJCcm9hZGNhc3RpbmciKV0pXSldKV0pLF9jKCdsaScsW19jKCdhJyx7YXR0cnM6eyJocmVmIjoiI3dhc2FiaS1jb2luam9pbi1leGFtcGxlcyJ9fSxbX3ZtLl92KCJXYXNhYmkgQ29pbkpvaW4gZXhhbXBsZXMiKV0pXSksX2MoJ2xpJyxbX2MoJ2EnLHthdHRyczp7ImhyZWYiOiIjcmVhZC1tb3JlIn19LFtfdm0uX3YoIlJlYWQgbW9yZSIpXSldKV0pXSksX2MoJ3AnKSxfdm0uX3YoIiAiKSxfYygnaDInLHthdHRyczp7ImlkIjoiZG9pbmctY29pbmpvaW4tc3RlcC1ieS1zdGVwIn19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjZG9pbmctY29pbmpvaW4tc3RlcC1ieS1zdGVwIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIERvaW5nIENvaW5Kb2luIHN0ZXAtYnktc3RlcCIpXSksX3ZtLl92KCIgIiksX2MoJ29sJyxbX2MoJ2xpJyxbX3ZtLl92KCJMYXVuY2ggV2FzYWJpLCBhbmQgb3BlbiB5b3VyIHdhbGxldCB0aGF0IGNvbnRhaW5zIHRoZSBjb2lucyB0aGF0IHlvdSB3YW50IHRvIENvaW5Kb2luLlxuTm90aWNlIHRoYXQgaXQgaXMgbm90IHlldCBwb3NzaWJsZSB0byBDb2luSm9pbiBmcm9tIGEgaGFyZHdhcmUgd2FsbGV0LCB0aGUga2V5cyBtdXN0IGJlIFwiaG90XCIgb24geW91ciBjb21wdXRlci5cblRoZW4gY2xpY2sgb24gdGhlICIpLF9jKCdjb2RlJyxbX3ZtLl92KCJDb2luSm9pbiIpXSksX3ZtLl92KCIgdGFiLCBlaXRoZXIgZnJvbSB0aGUgdG9wIHRhYnMgb3IgdGhlIHJpZ2h0LXNpZGUgbWVudS4iKV0pXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfYygnaW1nJyx7YXR0cnM6eyJzcmMiOiIvQ29pbkpvaW4ucG5nIiwiYWx0IjoiIn19KV0pLF92bS5fdigiICIpLF9jKCdvbCcse2F0dHJzOnsic3RhcnQiOiIyIn19LFtfYygnbGknLFtfdm0uX3YoIlNlbGVjdCBjb2lucyBmb3Igam9pbmluZyBieSBjbGlja2luZyB0aGUgY2hlY2sgYm94IGluIHRoZSBjb2luIGxpc3QuXG5Zb3UgY2FuIHNlbGVjdCBvbmUgb3IgbW9yZSBjb2lucywgYnV0IHdoZW4gc2V2ZXJhbCBhcmUgc2VsZWN0ZWQsIHRoZXkgY2FuIGJlIGxpbmtlZCBhbmQgY2x1c3RlcmVkIGJ5IGFuIGF0dGFja2VyLlxuU28sIGNob29zZSBjYXJlZnVsbHkgd2hpY2ggY29pbnMgeW91IHdhbnQgb3RoZXJzIHRvIGtub3cgYmVsb25nIHRvIHRoZSBzYW1lIGVudGl0eSAoeW91KS5cbllvdSBjYW4gc2VsZWN0ICIpLF9jKCdpbWcnLHtzdGF0aWNDbGFzczoic2hpZWxkIixhdHRyczp7InNyYyI6Ii9TaGllbGRSZWQucG5nIiwiYWx0IjoicmVkIHNoaWVsZCJ9fSksX3ZtLl92KCIgY29pbnMsIHdoaWNoIGFyZSBub3QgcHJpdmF0ZSB5ZXQsIGJ1dCB3aWxsIGdhaW4gYW5vbnltaXR5IHNldCBpbiB0aGlzIHJvdW5kIG9mIENvaW5Kb2luLlxuQWxzbywgeW91IGNhbiBzZWxlY3QgIiksX2MoJ2ltZycse3N0YXRpY0NsYXNzOiJzaGllbGQiLGF0dHJzOnsic3JjIjoiL1NoaWVsZEdyZWVuLnBuZyIsImFsdCI6ImdyZWVuIHNoaWVsZCJ9fSksX3ZtLl92KCIgY29pbnMsIHdoaWNoIGNvbWUgZnJvbSBhIHByZXZpb3VzIHJvdW5kIG9mIENvaW5Kb2luLCBzbyB0aGF0IHRoZXkgZ2FpbiBhbiBldmVuIGxhcmdlciBhbm9ueW1pdHkgc2V0LlxuV2hhdCBpcyBpbXBvcnRhbnQgaXMgdGhhdCB0aGUgc3VtIG9mIGNvaW5zIHJlZ2lzdGVyZWQgaGF2ZSBhIHZhbHVlIGxhcmdlciB0aGFuIHRoZSBtaW5pbXVtIGxldmVsLCB3aGljaCBpcyBjdXJyZW50bHkgcm91Z2hseSAwLjEgYml0Y29pbi4iKV0pXSksX3ZtLl92KCIgIiksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJjdXN0b20tYmxvY2sgZGFuZ2VyIn0sW19jKCdwJyx7c3RhdGljQ2xhc3M6ImN1c3RvbS1ibG9jay10aXRsZSJ9LFtfdm0uX3YoIldBUk5JTkciKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJEbyBub3Qgc2VsZWN0IGNvaW5zIHdpdGggZGlmZmVyZW50IGNvbG9ycyAoZGlmZmVyZW50IGFub255bWl0eSBzZXRzKSB0byBDb2luSm9pbiBpbiB0aGUgc2FtZSByb3VuZC5cblRoaXMgaXMgYmVjYXVzZSB0aGUgY29pbnMgd2l0aCB0aGUgaGlnaGVyIGFub255bWl0eSBzZXQgd2lsbCBsb3NlIHNvbWUgb2YgdGhlaXIgYW5vbnltaXR5IHNldCwgdG8gZXF1YWwgdGhlIGFub255bWl0eSBzZXQgb2YgdGhlIGxvd2VyIG9uZXMuXG5UaGUgYmVzdCBvcHRpb24gd291bGQgYmUgdG8gc2VsZWN0IGNvaW5zIHdpdGggdGhlIHNhbWUgYW5vbnltaXR5IHNldC4iKV0pXSksX3ZtLl92KCIgIiksX2MoJ29sJyx7YXR0cnM6eyJzdGFydCI6IjMifX0sW19jKCdsaScsW192bS5fdigiU3BlY2lmeSBhbm9ueW1pdHkgc2V0IHRhcmdldC5cbldhc2FiaSB3aWxsIGF1dG9tYXRpY2FsbHkgcmUtcmVnaXN0ZXIgeW91ciBjb2luIGZvciB0aGUgbmV4dCByb3VuZCB1bnRpbCB0aGlzIHRhcmdldCBpcyByZWFjaGVkLlxuWW91IGNhbiBlYXNpbHkgdG9nZ2xlIGJldHdlZW4gdGhyZWUgbGV2ZWxzIGJ5IGNsaWNraW5nIG9uIHRoZSBzaGllbGQuXG5Zb3UgY2FuIGFsc28gIiksX2MoJ3JvdXRlci1saW5rJyx7YXR0cnM6eyJ0byI6Ii9GQVEvRkFRLVVzZVdhc2FiaS5odG1sI2hvdy1jYW4taS1jaGFuZ2UtdGhlLWFub25zZXQtdGFyZ2V0In19LFtfdm0uX3YoImNoYW5nZSB0aGUgdmFsdWUiKV0pLF92bS5fdigiIG9mIHRoZSB0aHJlZSBzaGllbGRzIGluIHRoZSBzZXR0aW5ncy4iKV0sMSldKSxfdm0uX3YoIiAiKSxfYygncCcsW19jKCdpbWcnLHthdHRyczp7InNyYyI6Ii9Db2luSm9pbkFub25zZXRUYXJnZXRZZWxsb3cucG5nIiwiYWx0IjoiIn19KSxfdm0uX3YoIiAiKSxfYygnaW1nJyx7YXR0cnM6eyJzcmMiOiIvQ29pbkpvaW5Bbm9uc2V0VGFyZ2V0R3JlZW4ucG5nIiwiYWx0IjoiIn19KSxfdm0uX3YoIiAiKSxfYygnaW1nJyx7YXR0cnM6eyJzcmMiOiIvQ29pbkpvaW5Bbm9uc2V0VGFyZ2V0Q2hlY2sucG5nIiwiYWx0IjoiIn19KV0pLF92bS5fdigiICIpLF9jKCdvbCcse2F0dHJzOnsic3RhcnQiOiI0In19LFtfYygnbGknLFtfdm0uX3YoIkVudGVyIHlvdXIgcGFzc3dvcmQgYW5kIGNsaWNrICIpLF9jKCdjb2RlJyxbX3ZtLl92KCJFbnF1ZXVlIFNlbGVjdGVkIENvaW5zIildKSxfdm0uX3YoIi5cbllvdSBvbmx5IGhhdmUgdG8gZW50ZXIgeW91ciBwYXNzd29yZCBmb3IgdGhlIGZpcnN0IHJvdW5kIG9mIG1peGluZywgYXMgYW55IHJlLW1peCByb3VuZHMgZGlyZWN0bHkgYWZ0ZXJ3YXJkcyBhcmUgZG9uZSB3aXRob3V0IHJlcXVpcmluZyBhIHBhc3N3b3JkIGlucHV0LiIpXSldKSxfdm0uX3YoIiAiKSxfYygncCcsW19jKCdpbWcnLHthdHRyczp7InNyYyI6Ii9Db2luSm9pbkNvaW5zQmVpbmdDb2luSm9pbmVkLnBuZyIsImFsdCI6IiJ9fSldKSxfdm0uX3YoIiAiKSxfYygnb2wnLHthdHRyczp7InN0YXJ0IjoiNSJ9fSxbX2MoJ2xpJyxbX3ZtLl92KCJOb3csIHdhaXQgdW50aWwgdGhlIENvaW5Kb2luIGlzIGNvbXBsZXRlLlxuVGhlIHJvdW5kIHN0YXJ0cyBlaXRoZXIgYXMgc29vbiBhcyAxMDAgcGVlcnMgaGF2ZSByZWdpc3RlcmVkIHRoZWlyIGNvaW5zLCBvciBhZnRlciB0d28gaG91cnMgaGF2ZSBlbGFwc2VkIHNpbmNlIHRoZSBsYXN0IHJvdW5kLlxuRnJvbSBub3cgb24gdGhlcmUgaXMgbm8gbW9yZSBpbnRlcmFjdGlvbiByZXF1aXJlZC5cbkp1c3QgbGVhdmUgV2FzYWJpIHJ1bm5pbmcgaW4gdGhlIGJhY2tncm91bmQgb2YgeW91ciBjb21wdXRlci4iKV0pXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfYygnaW1nJyx7YXR0cnM6eyJzcmMiOiIvQ29pbkpvaW5TdGF0dXMucG5nIiwiYWx0IjoiIn19KV0pLF92bS5fdigiICIpLF9jKCdvbCcse2F0dHJzOnsic3RhcnQiOiI2In19LFtfYygnbGknLFtfdm0uX3YoIldoZW4gdGhlIENvaW5Kb2luIGlzIGZpbmlzaGVkLCBhbmQgdGhlIENvaW5Kb2luIHRyYW5zYWN0aW9uIGlzIGJyb2FkY2FzdCwgeW91IHdpbGwgcmVjZWl2ZSBhIGZyZXNoIGNvaW4gd2l0aCBhIGhpZ2ggYW5vbnltaXR5IHNldCwgYXMgd2VsbCBhcyBub24tcHJpdmF0ZSBjaGFuZ2UuIildKV0pLF92bS5fdigiICIpLF9jKCdoMicse2F0dHJzOnsiaWQiOiJ6ZXJvbGluay1wcm90b2NvbC1zdGVwLWJ5LXN0ZXAifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiN6ZXJvbGluay1wcm90b2NvbC1zdGVwLWJ5LXN0ZXAifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgWmVyb0xpbmsgcHJvdG9jb2wgc3RlcC1ieS1zdGVwIildKSxfdm0uX3YoIiAiKSxfYygnaDMnLHthdHRyczp7ImlkIjoiaW5wdXQtcmVnaXN0cmF0aW9uIn19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjaW5wdXQtcmVnaXN0cmF0aW9uIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIElucHV0IHJlZ2lzdHJhdGlvbiIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIkR1cmluZyB0aGUgIiksX2MoJ3JvdXRlci1saW5rJyx7YXR0cnM6eyJ0byI6Ii9GQVEvRkFRLVVzZVdhc2FiaS5odG1sI3doYXQtaXMtaGFwcGVuaW5nLWluLXRoZS1pbnB1dC1yZWdpc3RyYXRpb24tcGhhc2UifX0sW192bS5fdigiaW5wdXQgcmVnaXN0cmF0aW9uIildKSxfdm0uX3YoIiwgeW91IHNlbGVjdCB3aGljaCBjb2lucyB5b3Ugd2FudCB0byByZWdpc3RlciBmb3IgQ29pbkpvaW4uXG5UaGVzZSBjb2lucyBuZWVkIHRvIGJlIGNvbmZpcm1lZCBvbiB0aGUgQml0Y29pbiB0aW1lY2hhaW4sIHVubGVzcyB0aGV5IGFyZSBmcm9tIGEgV2FzYWJpIENvaW5Kb2luIGFuZCB5b3UgcmUtcmVnaXN0ZXIgdGhlbS5cbkluIHRoZSBiYWNrZ3JvdW5kLCBXYXNhYmkgZ2VuZXJhdGVzIGFuIGlucHV0IHByb29mLCBhIHNpZ25hdHVyZSBvdmVyIGEgY2hhbGxlbmdlIG1lc3NhZ2Ugd2l0aCB0aGUgcHJpdmF0ZSBrZXkgdGhhdCBsb2NrcyB1cCB0aGUgY29pbnMuIildLDEpLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJXaXRoIHRoaXMsIHRoZSBjb29yZGluYXRvciBjYW4gdmVyaWZ5IHRoYXQgeW91IGFjdHVhbGx5IG93biB0aGVzZSBjb2lucy5cblRoZW4geW91ciBXYXNhYmkgY2xpZW50IGdlbmVyYXRlcyBzZXZlcmFsIGZyZXNoIGFkZHJlc3NlcywgZGVwZW5kaW5nIG9uIHRoZSB2YWx1ZSBvZiBpbnB1dHMgcmVnaXN0ZXJlZC5cblRoZSBhZGRyZXNzIG9mIHRoZSBhbm9uc2V0IENvaW5Kb2luIG91dHB1dCBtdXN0IG5vdCBiZSBsaW5rZWQgdG8geW91ciBpbnB1dCwgYW5kIHRodXMgaXQgaXMgIiksX2MoJ2EnLHthdHRyczp7ImhyZWYiOiJodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9CbGluZF9zaWduYXR1cmUiLCJ0YXJnZXQiOiJfYmxhbmsiLCJyZWwiOiJub29wZW5lciBub3JlZmVycmVyIn19LFtfdm0uX3YoImNyeXB0b2dyYXBoaWNhbGx5IGJsaW5kZWQiKSxfYygnT3V0Ym91bmRMaW5rJyldLDEpLF92bS5fdigiIHRvIGluY29tcHJlaGVuc2libGUgY3lwaGVyLXRleHQuXG5TaW5jZSB0aGUgY2hhbmdlIG91dHB1dCBjYW4gYmUgZWFzaWx5IGxpbmtlZCB0byB5b3VyIGlucHV0IHdpdGggIiksX2MoJ3JvdXRlci1saW5rJyx7YXR0cnM6eyJ0byI6Ii9GQVEvRkFRLUdlbmVyYWxCaXRjb2luUHJpdmFjeS5odG1sI3doYXQtaXMtYS1jb2luam9pbi1zdWRva3UifX0sW192bS5fdigiQ29pbkpvaW4gU3Vkb2t1IildKSxfdm0uX3YoIiwgdGhpcyBhZGRyZXNzIGlzIG5vdCBibGluZGVkLCBidXQga2VwdCBpbiBjbGVhci10ZXh0LiIpXSwxKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiV2FzYWJpIHdhbGxldCBnZW5lcmF0ZXMgYSBuZXcgIiksX2MoJ2EnLHthdHRyczp7ImhyZWYiOiJodHRwczovL3RiLW1hbnVhbC50b3Jwcm9qZWN0Lm9yZy9tYW5hZ2luZy1pZGVudGl0aWVzLyIsInRhcmdldCI6Il9ibGFuayIsInJlbCI6Im5vb3BlbmVyIG5vcmVmZXJyZXIifX0sW192bS5fdigiVG9yIGlkZW50aXR5IiksX2MoJ091dGJvdW5kTGluaycpXSwxKSxfdm0uX3YoIiBjYWxsZWQgIiksX2MoJ3N0cm9uZycsW192bS5fdigiQWxpY2UiKV0pLF92bS5fdigiLlxuU2hlIGlzIGxpa2UgYSBzZXBhcmF0ZSBlbnRpdHksIGFuZCBmb3IgZXZlcnkgcm91bmQgeW91IHVzZSBhIG5ldyBBbGljZSB3aG8gaXMgbm90IGxpbmtlZCB0byBhbnkgcHJldmlvdXMgY29ubmVjdGlvbi5cbldpdGggQWxpY2UsIHlvdSBzZW5kIHNvbWUgaW5mb3JtYXRpb24gdG8gdGhlIFdhc2FiaSBjb29yZGluYXRvciBzZXJ2ZXI6IildKSxfdm0uX3YoIiAiKSxfYygndWwnLFtfYygnbGknLFtfdm0uX3YoIlRoZSBpbnB1dCBjb2luIHRoYXQgeW91IHdhbnQgdG8gcmVnaXN0ZXIsIHRvZ2V0aGVyIHdpdGggdGhlIGlucHV0IHByb29mIHNpZ25hdHVyZS4iKV0pLF92bS5fdigiICIpLF9jKCdsaScsW192bS5fdigiVGhlIGNsZWFyIHRleHQgY2hhbmdlIGFkZHJlc3MuIildKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfdm0uX3YoIlRoZSBibGluZGVkIGFub25zZXQgQ29pbkpvaW4gb3V0cHV0LiIpXSldKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiVGhlIFdhc2FiaSBjb29yZGluYXRvciBub3cgdmVyaWZpZXMgdGhhdDoiKV0pLF92bS5fdigiICIpLF9jKCd1bCcsW19jKCdsaScsW192bS5fdigiVGhlcmUgaXMgc3RpbGwgcm9vbSBmb3IgbW9yZSBwZWVycyBvbiB0aGlzIENvaW5Kb2luLiIpXSksX3ZtLl92KCIgIiksX2MoJ2xpJyxbX3ZtLl92KCJUaGUgYmxpbmRlZCBvdXRwdXQgaGFzIG5ldmVyIGJlZW4gcmVnaXN0ZXJlZCBiZWZvcmUuIildKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfdm0uX3YoIkVhY2ggaW5wdXQgaGFzIG5vdCBiZWVuIHJlZ2lzdGVyZWQgYmVmb3JlLCBpcyBub3QgYmFubmVkLCBpcyB1bnNwZW50LCBhbmQgdGhhdCB0aGUgaW5wdXQgcHJvb2YgaXMgdmFsaWQuIildKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfdm0uX3YoIlRoYXQgdGhlIHN1bSB2YWx1ZSBvZiBpbnB1dHMgaXMgaGlnaGVyIHRoYW4gdGhlIG1pbmltdW0gcmVxdWlyZWQgdmFsdWUgb2Ygcm91Z2hseSAwLjEgYml0Y29pbi4iKV0pXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIk9ubHkgd2hlbiBhbGwgdGhlc2UgY2hlY2tzIGFyZSB2YWxpZCBkb2VzIHRoZSBjb29yZGluYXRvciBzaWduIHRoZSBibGluZGVkIG91dHB1dC5cbkhlIGRvZXMgbm90IGtub3cgdGhlIGFkZHJlc3MgdGhhdCBoZSBpcyBzaWduaW5nLCBiZWNhdXNlIGl0IGlzIGJsaW5kZWQgY3lwaGVyLXRleHQuXG5UaGlzIHNpZ25hdHVyZSBpcyBwcm9vZiB0aGF0IHRoZSBjb29yZGluYXRvciBoYXMgdmVyaWZpZWQgdGhhdCBBbGljZSBpcyBub3QgY2hlYXRpbmcuXG5UaGUgY29vcmRpbmF0b3Igc2VuZHMgdGhlIHNpZ25lZCBibGluZGVkIG91dHB1dCBiYWNrIHRvIEFsaWNlLCB0b2dldGhlciB3aXRoIGEgdW5pcXVlIElEIHRoYXQgaXMgdGhlIGlkZW50aWZpZXIgb2YgdGhpcyBzcGVjaWZpYyBBbGljZSBpbiB0aGlzIHJvdW5kLiIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIkFsaWNlIGhhcyB0aGUgc2VjcmV0IHBhcmFtZXRlcnMgbmVlZGVkIHRvIHVuYmxpbmQgdGhlIHNpZ25lZCwgYmxpbmRlZCBvdXRwdXQuXG5XaXRoIHRoZSBtYWdpYyBvZiBjcnlwdG9ncmFwaHksIHNoZSBjYW4gcmV2ZWFsIHRoZSBjbGVhci10ZXh0IGFkZHJlc3Mgb2YgdGhlIGFub25zZXQgQ29pbkpvaW4gb3V0cHV0LlxuSG93ZXZlciwgdGhlIGNvb3JkaW5hdG9yIHNpZ25hdHVyZSBpcyBzdGlsbCBhdHRhY2hlZCB0byB0aGlzIGFkZHJlc3MuIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiVGhlIGlucHV0IHJlZ2lzdHJhdGlvbiBwaGFzZSBlbmRzIHdoZW4gZWl0aGVyOiB0aGUgbnVtYmVyIG9mIHJlZ2lzdGVyZWQgaW5wdXRzIGV4Y2VlZHMgdGhlIG51bWJlciBvZiByZXF1aXJlZCBpbnB1dHMgKG1lYW5pbmcgYW5vbnltaXR5IHNldCBvZiAxMDAgcGVlcnMpLCBvciB3aGVuIHRoZSB0aW1lIGVsYXBzZWQgc2luY2UgdGhlIHByZXZpb3VzIHJvdW5kIHJlYWNoZXMgdHdvIGhvdXJzLiIpXSksX3ZtLl92KCIgIiksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJ5dEVtYmVkIixzdGF0aWNTdHlsZTp7ImJhY2tncm91bmQtaW1hZ2UiOiJ1cmwoaHR0cHM6Ly9pbWcueW91dHViZS5jb20vdmkvdjFmSWpGUjZlNVEvaHFkZWZhdWx0LmpwZykifSxhdHRyczp7ImRhdGEtaWQiOiJ2MWZJakZSNmU1USJ9fSxbX2MoJ2lmcmFtZScse2F0dHJzOnsidGl0bGUiOiJZb3VUdWJlIHYxZklqRlI2ZTVRIiwiZGF0YS1zcmMiOiJodHRwczovL3d3dy55b3V0dWJlLW5vY29va2llLmNvbS9lbWJlZC92MWZJakZSNmU1UT8mYXV0b3BsYXk9MSZhdXRvaGlkZT0xJm1vZGVzdGJyYW5kaW5nPTEmY29sb3I9d2hpdGUmcmVsPTAiLCJmcmFtZWJvcmRlciI6IjAiLCJhbGxvdyI6ImF1dG9wbGF5O2VuY3J5cHRlZC1tZWRpYTtwaWN0dXJlLWluLXBpY3R1cmUiLCJhbGxvd2Z1bGxzY3JlZW4iOiIifX0pXSksX3ZtLl92KCIgIiksX2MoJ2gzJyx7YXR0cnM6eyJpZCI6ImNvbm5lY3Rpb24tY29uZmlybWF0aW9uIn19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjY29ubmVjdGlvbi1jb25maXJtYXRpb24ifX0sW192bS5fdigiIyIpXSksX3ZtLl92KCIgQ29ubmVjdGlvbiBjb25maXJtYXRpb24iKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJUaGVyZSBhcmUgbWFueSBBbGljZXMgKGRpZmZlcmVudCB1c2VycykgcmVnaXN0ZXJpbmcgdGhlaXIgaW5wdXRzIGluIHRoZSBmaXJzdCBwaGFzZSwgYW5kIHRoaXMgdGFrZXMgYSB3aGlsZSwgdXAgdG8gdHdvIGhvdXJzLlxuVGhlIGNvbm5lY3Rpb24gY29uZmlybWF0aW9uIHBoYXNlIG1ha2VzIHN1cmUgdGhhdCBhbGwgb2YgdGhlbSBhcmUgc3RpbGwgb25saW5lIGFuZCByZWFkeSB0byBjb250aW51ZS5cblRoZSBjb29yZGluYXRvciB2ZXJpZmllcyB0aGUgdW5pcXVlIElEIGZyb20gYWxsIHRoZSBBbGljZXMsIGFuZCB3aGlsZSBldmVyeW9uZSBpcyBzdGlsbCBjb21tdW5pY2F0aW5nLCB0aGUgY29vcmRpbmF0b3IgcmV0dXJucyB0aGUgcm91bmQgaGFzaCBvZiBhbGwgdGhlIHJlZ2lzdGVyZWQgaW5wdXRzLiIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIlRoZSByb3VuZCBpcyBhYmFuZG9uZWQgYW5kIHJlLXN0YXJ0ZWQgaWYgdG9vIG1hbnkgQWxpY2VzIGhhdmUgZHJvcHBlZCwgZm9yIGV4YW1wbGUgd2hlbiB0aGVpciBXYXNhYmkgaXMgc2h1dCBkb3duLCBvciB3aGVuIHRoZWlyIHRvciBjb25uZWN0aW9uIGlzIHRlbXBvcmFyaWx5IGJyb2tlbi5cblRoZSBjb25uZWN0aW9uIGNvbmZpcm1hdGlvbiBwaGFzZSBlbmRzIHdoZW4gYWxsIEFsaWNlcyBoYXZlIHByb3ZpZGVkIHRoZWlyIGlucHV0cywgb3IgYWZ0ZXIgYSB0aW1lb3V0IHdoZW4gdGhlIG51bWJlciBvZiBvbmxpbmUgQWxpY2VzIGFyZSBzdGlsbCBsYXJnZXIgdGhhbiB0aGUgcmVxdWlyZWQgbnVtYmVyIG9mIHBlZXJzLiIpXSksX3ZtLl92KCIgIiksX2MoJ2Rpdicse3N0YXRpY0NsYXNzOiJ5dEVtYmVkIixzdGF0aWNTdHlsZTp7ImJhY2tncm91bmQtaW1hZ2UiOiJ1cmwoaHR0cHM6Ly9pbWcueW91dHViZS5jb20vdmkvaGhrTDBRdklhR1kvaHFkZWZhdWx0LmpwZykifSxhdHRyczp7ImRhdGEtaWQiOiJoaGtMMFF2SWFHWSJ9fSxbX2MoJ2lmcmFtZScse2F0dHJzOnsidGl0bGUiOiJZb3VUdWJlIGhoa0wwUXZJYUdZIiwiZGF0YS1zcmMiOiJodHRwczovL3d3dy55b3V0dWJlLW5vY29va2llLmNvbS9lbWJlZC9oaGtMMFF2SWFHWT8mYXV0b3BsYXk9MSZhdXRvaGlkZT0xJm1vZGVzdGJyYW5kaW5nPTEmY29sb3I9d2hpdGUmcmVsPTAiLCJmcmFtZWJvcmRlciI6IjAiLCJhbGxvdyI6ImF1dG9wbGF5O2VuY3J5cHRlZC1tZWRpYTtwaWN0dXJlLWluLXBpY3R1cmUiLCJhbGxvd2Z1bGxzY3JlZW4iOiIifX0pXSksX3ZtLl92KCIgIiksX2MoJ2gzJyx7YXR0cnM6eyJpZCI6Im91dHB1dC1yZWdpc3RyYXRpb24ifX0sW19jKCdhJyx7c3RhdGljQ2xhc3M6ImhlYWRlci1hbmNob3IiLGF0dHJzOnsiaHJlZiI6IiNvdXRwdXQtcmVnaXN0cmF0aW9uIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIE91dHB1dCByZWdpc3RyYXRpb24iKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJOb3cgdGhhdCBhbGwgcGVlcnMgYXJlIG9ubGluZSwgd2UgYXJlIHJlYWR5IHRvIHByb2NlZWQgd2l0aCB0aGUgIiksX2MoJ3JvdXRlci1saW5rJyx7YXR0cnM6eyJ0byI6Ii9GQVEvRkFRLVVzZVdhc2FiaS5odG1sI3doYXQtaXMtaGFwcGVuaW5nLWluLXRoZS1vdXRwdXQtcmVnaXN0cmF0aW9uLXBoYXNlIn19LFtfdm0uX3YoIm91dHB1dCByZWdpc3RyYXRpb24gcGhhc2UiKV0pLF92bS5fdigiIG9mIHRoZSByb3VuZC5cbllvdXIgV2FzYWJpIGNsaWVudCBnZW5lcmF0ZXMgYSBjb21wbGV0ZWx5IG5ldyB0b3IgaWRlbnRpdHkgIiksX2MoJ3N0cm9uZycsW192bS5fdigiQm9iIildKSxfdm0uX3YoIiwgdGhhdCBpcyBpbiBubyB3YXkgdGllZCB0byBBbGljZS5cbkJvYiBzZW5kcyB0byB0aGUgV2FzYWJpIGNvb3JkaW5hdG9yOiIpXSwxKSxfdm0uX3YoIiAiKSxfYygndWwnLFtfYygnbGknLFtfdm0uX3YoIlRoZSBjbGVhci10ZXh0IGFkZHJlc3MgZm9yIHRoZSBhbm9uc2V0IENvaW5Kb2luIG91dHB1dC4iKV0pLF92bS5fdigiICIpLF9jKCdsaScsW192bS5fdigiVGhlIGNvb3JkaW5hdG9yIHNpZ25hdHVyZSBvdmVyIHRoYXQgb3V0cHV0LiIpXSksX3ZtLl92KCIgIiksX2MoJ2xpJyxbX3ZtLl92KCJUaGUgcm91bmQgaGFzaCBvZiBhbGwgdGhlIGlucHV0cy4iKV0pXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIkJlY2F1c2UgdGhlIGNvb3JkaW5hdG9yIGNhbiB2ZXJpZnkgaGlzIG93biBzaWduYXR1cmUsIGhlIGtub3dzIHRoYXQgdGhpcyBvdXRwdXQgd2FzIGluaXRpYWxseSBzZW50IGJ5IGFueSBBbGljZSAoaGUgY2Fubm90IGtub3cgd2hpY2ggQWxpY2UgZXhhY3RseSksIGFuZCB0aGF0IGhlIGhhcyB2ZXJpZmllZCB0aGF0IGV2ZXJ5dGhpbmcgaXMgaW4gb3JkZXIuIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiSXQgaXMgdmVyeSBpbXBvcnRhbnQgdGhhdCB0aGUgY29vcmRpbmF0b3IgY2Fubm90IGxpbmsgQWxpY2UgdG8gQm9iLlxuQmVjYXVzZSBBbGljZSBoYXMgc2VudCB0aGUgY2xlYXItdGV4dCBpbnB1dCwgYW5kIEJvYiBzZW5kcyB0aGUgY2xlYXItdGV4dCBvdXRwdXQuXG5TbywgaWYgdGhlIHR3byB3ZXJlIHRvIGJlIGxpbmtlZCwgdGhlbiB0aGUgY29vcmRpbmF0b3IgY2FuIHNwZWNpZmljYWxseSBsaW5rIHRoZSBpbnB1dCB0byB0aGUgb3V0cHV0LCBtZWFuaW5nIHRoYXQgdGhlIGFub255bWl0eSBzZXQgaXMgMS5cbkJlY2F1c2UgQWxpY2UgY29tbWl0cyB0byB0aGUgb3V0cHV0IGJ5IHNlbmRpbmcgaXQgYmxpbmRlZCwgYW5kIGJlY2F1c2UgQm9iIGlzIGEgbmV3IHRvciBpZGVudGl0eSBub3QgbGlua2VkIHRvIEFsaWNlLCB0aGUgY29vcmRpbmF0b3IgY2FuIHZlcmlmeSB0aGF0IG5vYm9keSBpcyBjaGVhdGluZywgYnV0IGhlIGNhbm5vdCBkZWFub255bWl6ZSB0aGUgcGVlcnMuIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiVGhlIG91dHB1dCByZWdpc3RyYXRpb24gcGhhc2UgZW5kcyB3aGVuIHRoZSB2YWx1ZSBvZiBjbGVhci10ZXh0IG91dHB1dHMgcGx1cyBjaGFuZ2Ugb3V0cHV0cyBpcyBlcXVhbCB0byB0aGUgdmFsdWUgb2YgaW5wdXRzLCBtZWFuaW5nIGFsbCBCb2JzIGhhdmUgcmVnaXN0ZXJlZC5cbklmLCBhZnRlciBhIHRpbWVvdXQgbm90IGFsbCBvdXRwdXRzIGFyZSByZWdpc3RlcmVkLCB0aGVuIHRoaXMgcm91bmQgaXMgYWJhbmRvbmVkLCB0aGUgbWlzc2luZyBwZWVycyBhcmUgYmFubmVkLCBhbmQgYSBuZXcgcm91bmQgaXMgc3RhcnRlZC4iKV0pLF92bS5fdigiICIpLF9jKCdoMycse2F0dHJzOnsiaWQiOiJzaWduaW5nIn19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjc2lnbmluZyJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiBTaWduaW5nIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiTm93IHRoYXQgYWxsIGlucHV0cyBhbmQgb3V0cHV0cyBhcmUgcmVnaXN0ZXJlZCwgdGhlIFdhc2FiaSBjb29yZGluYXRvciBjYW4gc3RhcnQgdGhlICIpLF9jKCdyb3V0ZXItbGluaycse2F0dHJzOnsidG8iOiIvRkFRL0ZBUS1Vc2VXYXNhYmkuaHRtbCN3aGF0LWlzLWhhcHBlbmluZy1pbi10aGUtc2lnbmluZy1waGFzZSJ9fSxbX3ZtLl92KCJzaWduaW5nIHBoYXNlIildKSxfdm0uX3YoIiBieSBidWlsZGluZyB0aGUgQ29pbkpvaW4gdHJhbnNhY3Rpb24gd2l0aCBhbGwgdGhlIHJlZ2lzdGVyZWQgaW5wdXRzLCB0aGUgYW5vbnNldCBvdXRwdXRzLCB0aGUgY2hhbmdlIG91dHB1dHMgYW5kIHRoZSBjb29yZGluYXRvciBmZWUgb3V0cHV0LlxuSGUgc2VuZHMgdGhpcyB0cmFuc2FjdGlvbiB0byBhbGwgdGhlIEFsaWNlcyBvZiB0aGlzIHJvdW5kLlxuRWFjaCBBbGljZSB2ZXJpZmllcyB0aGF0OiIpXSwxKSxfdm0uX3YoIiAiKSxfYygndWwnLFtfYygnbGknLFtfdm0uX3YoIlRoZSBjb21taXR0ZWQgcm91bmQgaGFzaCBpcyBlcXVhbCB0byB0aGUgaGFzaCBvZiBhbGwgdGhlIGlucHV0cyBpbiB0aGUgcHJvcG9zZWQgdHJhbnNhY3Rpb24uIildKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfdm0uX3YoIkhlciBpbnB1dHMgYW5kIG91dHB1dHMgYXJlIGNvcnJlY3RseSBpbmNsdWRlZC4iKV0pXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIlNoZSB0aGVuIHNpZ25zIHRoZSB0cmFuc2FjdGlvbiB3aXRoIHRoZSBwcml2YXRlIGtleXMgb2YgaGVyIGlucHV0cy5cbkFsaWNlIHNlbmRzIHRoZSB1bmlxdWVJRCwgdGhlIHNpZ25hdHVyZSwgYW5kIHRoZSBpbnB1dCBpbmRleCB0byB0aGUgY29vcmRpbmF0b3IsIHdobyB0aGVuIHZlcmlmaWVzIHRoaXMgaW5mb3JtYXRpb24uIildKSxfdm0uX3YoIiAiKSxfYygncCcsW192bS5fdigiVGhlIHNpZ25pbmcgcGhhc2UgZW5kcyB3aGVuIHRoZSBjb29yZGluYXRvciBoYXMgYWxsIHRoZSB2YWxpZCBzaWduYXR1cmVzIGZvciBhbGwgdGhlIHJlZ2lzdGVyZWQgaW5wdXRzLiIpXSksX3ZtLl92KCIgIiksX2MoJ2gzJyx7YXR0cnM6eyJpZCI6ImJyb2FkY2FzdGluZyJ9fSxbX2MoJ2EnLHtzdGF0aWNDbGFzczoiaGVhZGVyLWFuY2hvciIsYXR0cnM6eyJocmVmIjoiI2Jyb2FkY2FzdGluZyJ9fSxbX3ZtLl92KCIjIildKSxfdm0uX3YoIiBCcm9hZGNhc3RpbmciKV0pLF92bS5fdigiICIpLF9jKCdwJyxbX3ZtLl92KCJUaGUgQ29pbkpvaW4gdHJhbnNhY3Rpb24gaGFzIGJlZW4gc3VjY2Vzc2Z1bGx5IGJ1aWx0IGFuZCBzaWduZWQsIGFuZCBpdCBpcyBub3cgcmVhZHkgdG8gYmUgIiksX2MoJ3JvdXRlci1saW5rJyx7YXR0cnM6eyJ0byI6Ii9GQVEvRkFRLVVzZVdhc2FiaS5odG1sI3doYXQtaXMtaGFwcGVuaW5nLWluLXRoZS1icm9hZGNhc3RpbmctcGhhc2UifX0sW192bS5fdigiYnJvYWRjYXN0ZWQiKV0pLF92bS5fdigiIHRvIHRoZSBwZWVycyBvZiB0aGUgQml0Y29pbiBuZXR3b3JrLlxuVGhlIGNvb3JkaW5hdG9yIHNlbmRzIHRoaXMgdHJhbnNhY3Rpb24gb3ZlciB0aGUgdG9yIG5ldHdvcmsgdG8gYSByYW5kb20gQml0Y29pbiBQMlAgbm9kZSwgYW5kIGZyb20gdGhlcmUgaXQgaXMgZ29zc2lwZWQgdG8gb3RoZXIgbm9kZXMgYW5kIG1pbmVycy5cbldhc2FiaSBzYXZlcyBvbiBtaW5pbmcgZmVlcyBieSBzZXR0aW5nIGEgY29uZmlybWF0aW9uIHRhcmdldCBvZiByb3VnaGx5IDEyIGhvdXJzLCBidXQgeW91IGNhbiByZS1yZWdpc3RlciB1bmNvbmZpcm1lZCBhbm9uc2V0IG91dHB1dHMgZm9yIHRoZSBuZXh0IHJvdW5kIG9mIENvaW5Kb2luLiIpXSwxKSxfdm0uX3YoIiAiKSxfYygnaDInLHthdHRyczp7ImlkIjoid2FzYWJpLWNvaW5qb2luLWV4YW1wbGVzIn19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjd2FzYWJpLWNvaW5qb2luLWV4YW1wbGVzIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIFdhc2FiaSBDb2luSm9pbiBleGFtcGxlcyIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIkhlcmUncyBhIGxpc3Qgb2YgV2FzYWJpIENvaW5Kb2luIGV4YW1wbGVzIGFuZCBob3cgdGhleSBhcHBlYXIgb24gYW4gZXhwbG9yZXI6IildKSxfdm0uX3YoIiAiKSxfYygndWwnLFtfYygnbGknLFtfYygnYScse2F0dHJzOnsiaHJlZiI6Imh0dHBzOi8vYmxvY2tzdHJlYW0uaW5mby90eC9lNGE3ODlkMTZhMjRhNjY0M2RmZWUwNmUwMThhZDI3NjQ4Yjg5NmRhYWU2YTM1NzdhZTBmNGVkZGNjNGQ5MTc0IiwidGFyZ2V0IjoiX2JsYW5rIiwicmVsIjoibm9vcGVuZXIgbm9yZWZlcnJlciJ9fSxbX3ZtLl92KCJlNGE3ODlkMTZhMjRhNjY0M2RmZWUwNmUwMThhZDI3NjQ4Yjg5NmRhYWU2YTM1NzdhZTBmNGVkZGNjNGQ5MTc0IiksX2MoJ091dGJvdW5kTGluaycpXSwxKSxfdm0uX3YoIiB8ICIpLF9jKCdhJyx7YXR0cnM6eyJocmVmIjoiaHR0cDovL2V4cGxvcmVyenlkeHU1ZWNqcmt3Y2VheXF5Yml6bXBqanpuazVpem1pdGYybW9kaGN1c3VxbGlkLm9uaW9uL3R4L2U0YTc4OWQxNmEyNGE2NjQzZGZlZTA2ZTAxOGFkMjc2NDhiODk2ZGFhZTZhMzU3N2FlMGY0ZWRkY2M0ZDkxNzQiLCJ0YXJnZXQiOiJfYmxhbmsiLCJyZWwiOiJub29wZW5lciBub3JlZmVycmVyIn19LFtfdm0uX3YoIi5vbmlvbiB2ZXJzaW9uIiksX2MoJ091dGJvdW5kTGluaycpXSwxKV0pLF92bS5fdigiICIpLF9jKCdsaScsW19jKCdhJyx7YXR0cnM6eyJocmVmIjoiaHR0cHM6Ly9ibG9ja3N0cmVhbS5pbmZvL3R4L2M2OWFlZDUwNWNhNTA0NzNlMjg4MzEzMDIyMTkxNTY4OWMxNDc0YmUzYzY2YmNmN2FjN2RjMGUyNjI0NmFmYzgiLCJ0YXJnZXQiOiJfYmxhbmsiLCJyZWwiOiJub29wZW5lciBub3JlZmVycmVyIn19LFtfdm0uX3YoImM2OWFlZDUwNWNhNTA0NzNlMjg4MzEzMDIyMTkxNTY4OWMxNDc0YmUzYzY2YmNmN2FjN2RjMGUyNjI0NmFmYzgiKSxfYygnT3V0Ym91bmRMaW5rJyldLDEpLF92bS5fdigiIHwgIiksX2MoJ2EnLHthdHRyczp7ImhyZWYiOiJodHRwOi8vZXhwbG9yZXJ6eWR4dTVlY2pya3djZWF5cXliaXptcGpqem5rNWl6bWl0ZjJtb2RoY3VzdXFsaWQub25pb24vdHgvYzY5YWVkNTA1Y2E1MDQ3M2UyODgzMTMwMjIxOTE1Njg5YzE0NzRiZTNjNjZiY2Y3YWM3ZGMwZTI2MjQ2YWZjOCIsInRhcmdldCI6Il9ibGFuayIsInJlbCI6Im5vb3BlbmVyIG5vcmVmZXJyZXIifX0sW192bS5fdigiLm9uaW9uIHZlcnNpb24iKSxfYygnT3V0Ym91bmRMaW5rJyldLDEpXSksX3ZtLl92KCIgIiksX2MoJ2xpJyxbX2MoJ2EnLHthdHRyczp7ImhyZWYiOiJodHRwczovL2Jsb2Nrc3RyZWFtLmluZm8vdHgvZWYzMjliM2VkOGU3OTBmMTBmMGI1MjIzNDZmMWIzZDlmMWM5ZDQ1ZGZhNWI5MThlOTJkNmYwYTI1ZDkxYzdjZSIsInRhcmdldCI6Il9ibGFuayIsInJlbCI6Im5vb3BlbmVyIG5vcmVmZXJyZXIifX0sW192bS5fdigiZWYzMjliM2VkOGU3OTBmMTBmMGI1MjIzNDZmMWIzZDlmMWM5ZDQ1ZGZhNWI5MThlOTJkNmYwYTI1ZDkxYzdjZSIpLF9jKCdPdXRib3VuZExpbmsnKV0sMSksX3ZtLl92KCIgfCAiKSxfYygnYScse2F0dHJzOnsiaHJlZiI6Imh0dHA6Ly9leHBsb3Jlcnp5ZHh1NWVjanJrd2NlYXlxeWJpem1wamp6bms1aXptaXRmMm1vZGhjdXN1cWxpZC5vbmlvbi90eC9lZjMyOWIzZWQ4ZTc5MGYxMGYwYjUyMjM0NmYxYjNkOWYxYzlkNDVkZmE1YjkxOGU5MmQ2ZjBhMjVkOTFjN2NlIiwidGFyZ2V0IjoiX2JsYW5rIiwicmVsIjoibm9vcGVuZXIgbm9yZWZlcnJlciJ9fSxbX3ZtLl92KCIub25pb24gdmVyc2lvbiIpLF9jKCdPdXRib3VuZExpbmsnKV0sMSldKSxfdm0uX3YoIiAiKSxfYygnbGknLFtfYygnYScse2F0dHJzOnsiaHJlZiI6Imh0dHBzOi8vYmxvY2tzdHJlYW0uaW5mby90eC9mODIyMDYxNDU0MTNkYjVjMTI3MmQ1NjA5Yzg4NTgxYzQxNDgxNWUzNmU0MDBhZWU2NDEwZTBkZTlhMmQ0NmI1IiwidGFyZ2V0IjoiX2JsYW5rIiwicmVsIjoibm9vcGVuZXIgbm9yZWZlcnJlciJ9fSxbX3ZtLl92KCJmODIyMDYxNDU0MTNkYjVjMTI3MmQ1NjA5Yzg4NTgxYzQxNDgxNWUzNmU0MDBhZWU2NDEwZTBkZTlhMmQ0NmI1IiksX2MoJ091dGJvdW5kTGluaycpXSwxKSxfdm0uX3YoIiB8ICIpLF9jKCdhJyx7YXR0cnM6eyJocmVmIjoiaHR0cDovL2V4cGxvcmVyenlkeHU1ZWNqcmt3Y2VheXF5Yml6bXBqanpuazVpem1pdGYybW9kaGN1c3VxbGlkLm9uaW9uL3R4L2Y4MjIwNjE0NTQxM2RiNWMxMjcyZDU2MDljODg1ODFjNDE0ODE1ZTM2ZTQwMGFlZTY0MTBlMGRlOWEyZDQ2YjUiLCJ0YXJnZXQiOiJfYmxhbmsiLCJyZWwiOiJub29wZW5lciBub3JlZmVycmVyIn19LFtfdm0uX3YoIi5vbmlvbiB2ZXJzaW9uIiksX2MoJ091dGJvdW5kTGluaycpXSwxKV0pLF92bS5fdigiICIpLF9jKCdsaScsW19jKCdhJyx7YXR0cnM6eyJocmVmIjoiaHR0cHM6Ly9ibG9ja3N0cmVhbS5pbmZvL3R4L2E3MTU3NzgwYjdjNjk2YWIyNDc2NzExM2Q5ZDM0Y2RiYzBlYmE1YzM5NGM4OWFlYzRlZDFhOWZlYjMyNmJlYTUiLCJ0YXJnZXQiOiJfYmxhbmsiLCJyZWwiOiJub29wZW5lciBub3JlZmVycmVyIn19LFtfdm0uX3YoImE3MTU3NzgwYjdjNjk2YWIyNDc2NzExM2Q5ZDM0Y2RiYzBlYmE1YzM5NGM4OWFlYzRlZDFhOWZlYjMyNmJlYTUiKSxfYygnT3V0Ym91bmRMaW5rJyldLDEpLF92bS5fdigiIHwgIiksX2MoJ2EnLHthdHRyczp7ImhyZWYiOiJodHRwOi8vZXhwbG9yZXJ6eWR4dTVlY2pya3djZWF5cXliaXptcGpqem5rNWl6bWl0ZjJtb2RoY3VzdXFsaWQub25pb24vdHgvYTcxNTc3ODBiN2M2OTZhYjI0NzY3MTEzZDlkMzRjZGJjMGViYTVjMzk0Yzg5YWVjNGVkMWE5ZmViMzI2YmVhNSIsInRhcmdldCI6Il9ibGFuayIsInJlbCI6Im5vb3BlbmVyIG5vcmVmZXJyZXIifX0sW192bS5fdigiLm9uaW9uIHZlcnNpb24iKSxfYygnT3V0Ym91bmRMaW5rJyldLDEpXSldKSxfdm0uX3YoIiAiKSxfYygnaDInLHthdHRyczp7ImlkIjoicmVhZC1tb3JlIn19LFtfYygnYScse3N0YXRpY0NsYXNzOiJoZWFkZXItYW5jaG9yIixhdHRyczp7ImhyZWYiOiIjcmVhZC1tb3JlIn19LFtfdm0uX3YoIiMiKV0pLF92bS5fdigiIFJlYWQgbW9yZSIpXSksX3ZtLl92KCIgIiksX2MoJ3AnLFtfdm0uX3YoIldhbnQgdG8gcmVhZCBtb3JlIGFib3V0IENvaW5Kb2lucyBvbiBXYXNhYmk/XG4iKSxfYygncm91dGVyLWxpbmsnLHthdHRyczp7InRvIjoiL0ZBUS9GQVEtVXNlV2FzYWJpLmh0bWwjY29pbmpvaW4ifX0sW192bS5fdigiQ29pbkpvaW4gRkFRcyIpXSksX3ZtLl92KCIgaXMgaGVyZSB0byBoZWxwIHlvdS4iKV0sMSldKX0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFtdCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}